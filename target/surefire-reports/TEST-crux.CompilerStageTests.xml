<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="crux.CompilerStageTests" time="0.697" tests="50" errors="0" skipped="0" failures="50">
  <properties>
    <property name="java.specification.version" value="18"/>
    <property name="sun.cpu.isalist" value="amd64"/>
    <property name="sun.jnu.encoding" value="Cp1252"/>
    <property name="java.class.path" value="C:\Users\Cody\142ACompilers\target\test-classes;C:\Users\Cody\142ACompilers\target\classes;C:\Users\Cody\.m2\repository\org\antlr\antlr4-runtime\4.7.2\antlr4-runtime-4.7.2.jar;C:\Users\Cody\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.5.2\junit-jupiter-api-5.5.2.jar;C:\Users\Cody\.m2\repository\org\apiguardian\apiguardian-api\1.1.0\apiguardian-api-1.1.0.jar;C:\Users\Cody\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\Cody\.m2\repository\org\junit\platform\junit-platform-commons\1.5.2\junit-platform-commons-1.5.2.jar;C:\Users\Cody\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.5.2\junit-jupiter-engine-5.5.2.jar;C:\Users\Cody\.m2\repository\org\junit\platform\junit-platform-engine\1.5.2\junit-platform-engine-1.5.2.jar;"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="user.variant" value=""/>
    <property name="java.vendor.url" value="https://java.oracle.com/"/>
    <property name="user.timezone" value="America/Los_Angeles"/>
    <property name="os.name" value="Windows 10"/>
    <property name="java.vm.specification.version" value="18"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="US"/>
    <property name="sun.boot.library.path" value="C:\Users\Cody\.jdks\openjdk-18\bin"/>
    <property name="sun.java.command" value="C:\Users\Cody\AppData\Local\Temp\surefire14758459213996386591\surefirebooter1069511079398493053.jar C:\Users\Cody\AppData\Local\Temp\surefire14758459213996386591 2022-04-01T12-55-37_937-jvmRun1 surefire2768119060257602086tmp surefire_012974982606054736764tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="C:\Users\Cody\142ACompilers\target\test-classes;C:\Users\Cody\142ACompilers\target\classes;C:\Users\Cody\.m2\repository\org\antlr\antlr4-runtime\4.7.2\antlr4-runtime-4.7.2.jar;C:\Users\Cody\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.5.2\junit-jupiter-api-5.5.2.jar;C:\Users\Cody\.m2\repository\org\apiguardian\apiguardian-api\1.1.0\apiguardian-api-1.1.0.jar;C:\Users\Cody\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\Cody\.m2\repository\org\junit\platform\junit-platform-commons\1.5.2\junit-platform-commons-1.5.2.jar;C:\Users\Cody\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.5.2\junit-jupiter-engine-5.5.2.jar;C:\Users\Cody\.m2\repository\org\junit\platform\junit-platform-engine\1.5.2\junit-platform-engine-1.5.2.jar;"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="C:\Users\Cody"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2022-03-22"/>
    <property name="java.home" value="C:\Users\Cody\.jdks\openjdk-18"/>
    <property name="file.separator" value="\"/>
    <property name="basedir" value="C:\Users\Cody\142ACompilers"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="surefire.real.class.path" value="C:\Users\Cody\AppData\Local\Temp\surefire14758459213996386591\surefirebooter1069511079398493053.jar"/>
    <property name="user.script" value=""/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="18+36-2087"/>
    <property name="user.name" value="Cody"/>
    <property name="path.separator" value=";"/>
    <property name="os.version" value="10.0"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="localRepository" value="C:\Users\Cody\.m2\repository"/>
    <property name="java.vendor.url.bug" value="https://bugreport.java.com/bugreport/"/>
    <property name="java.io.tmpdir" value="C:\Users\Cody\AppData\Local\Temp\"/>
    <property name="idea.version" value="2021.3.3"/>
    <property name="java.version" value="18"/>
    <property name="user.dir" value="C:\Users\Cody\142ACompilers"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="native.encoding" value="Cp1252"/>
    <property name="java.library.path" value="C:\Users\Cody\.jdks\openjdk-18\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Eclipse Adoptium\jdk-17.0.1.12-hotspot\bin;C:\Python310\Scripts\;C:\Python310\;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\PuTTY\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\Cody\AppData\Local\Microsoft\WindowsApps;C:\Users\Cody\AppData\Local\GitHubDesktop\bin;C:\Users\Cody\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Cody\AppData\Roaming\npm;."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="java.vm.version" value="18+36-2087"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="62.0"/>
  </properties>
  <testcase name="parseTree" classname="crux.CompilerStageTests" time="0.18">
    <failure type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
Parse tree for program crux/stages/parse-tree/test01.crx differs from expected output. ==> expected: <program
  declarationList
    declaration
      functionDefinition
        type
        parameterList
        statementBlock
          statementList> but was: <program
  declarationList
    declaration
      functionDefinition
        type
        parameterType
        statementBlocks
          statements>
	at crux.CompilerStageTests.lambda$parseTree$1(CompilerStageTests.java:88)
]]></failure>
  </testcase>
  <testcase name="parseTree" classname="crux.CompilerStageTests" time="0.011">
    <failure type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
Parse tree for program crux/stages/parse-tree/test02.crx differs from expected output. ==> expected: <program
  declarationList
    declaration
      functionDefinition
        type
        parameterList
        statementBlock
          statementList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            literal> but was: <line 4:13 mismatched input ')' expecting {'Add', 'Subtract', 'OR'}>
	at crux.CompilerStageTests.lambda$parseTree$1(CompilerStageTests.java:88)
]]></failure>
  </testcase>
  <testcase name="parseTree" classname="crux.CompilerStageTests" time="0.006">
    <failure type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
Parse tree for program crux/stages/parse-tree/test03.crx differs from expected output. ==> expected: <program
  declarationList
    declaration
      functionDefinition
        type
        parameterList
        statementBlock
          statementList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            literal
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            literal> but was: <line 5:16 mismatched input ')' expecting {'Add', 'Subtract', 'OR'}
line 6:17 mismatched input ')' expecting {'Add', 'Subtract', 'OR'}>
	at crux.CompilerStageTests.lambda$parseTree$1(CompilerStageTests.java:88)
]]></failure>
  </testcase>
  <testcase name="parseTree" classname="crux.CompilerStageTests" time="0.008">
    <failure type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
Parse tree for program crux/stages/parse-tree/test04.crx differs from expected output. ==> expected: <program
  declarationList
    declaration
      functionDefinition
        type
        parameterList
        statementBlock
          statementList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression1
                          expression2
                            expression3
                              literal
                        op1
                        expression2
                          expression3
                            literal> but was: <line 4:13 mismatched input '+' expecting {'Add', 'Subtract', 'OR'}>
	at crux.CompilerStageTests.lambda$parseTree$1(CompilerStageTests.java:88)
]]></failure>
  </testcase>
  <testcase name="parseTree" classname="crux.CompilerStageTests" time="0.01">
    <failure type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
Parse tree for program crux/stages/parse-tree/test05.crx differs from expected output. ==> expected: <program
  declarationList
    declaration
      variableDeclaration
        type
    declaration
      arrayDeclaration
        type
    declaration
      functionDefinition
        type
        parameterList
        statementBlock
          statementList> but was: <program
  declarationList
    declaration
      variableDeclaration
        type
    declaration
      arrayDeclaration
        type
    declaration
      functionDefinition
        type
        parameterType
        statementBlocks
          statements>
	at crux.CompilerStageTests.lambda$parseTree$1(CompilerStageTests.java:88)
]]></failure>
  </testcase>
  <testcase name="parseTree" classname="crux.CompilerStageTests" time="0.006">
    <failure type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
Parse tree for program crux/stages/parse-tree/test06.crx differs from expected output. ==> expected: <program
  declarationList
    declaration
      variableDeclaration
        type
    declaration
      functionDefinition
        type
        parameterList
        statementBlock
          statementList
            statement
              assignmentStatement
                designator
                expression0
                  expression1
                    expression2
                      expression3
                        literal
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            designator> but was: <line 6:8 no viable alternative at input 'i=10;'
line 7:12 mismatched input ')' expecting {'Add', 'Subtract', 'OR', '['}>
	at crux.CompilerStageTests.lambda$parseTree$1(CompilerStageTests.java:88)
]]></failure>
  </testcase>
  <testcase name="parseTree" classname="crux.CompilerStageTests" time="0.005">
    <failure type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
Parse tree for program crux/stages/parse-tree/test07.crx differs from expected output. ==> expected: <program
  declarationList
    declaration
      functionDefinition
        type
        parameterList
        statementBlock
          statementList
            statement
              variableDeclaration
                type
            statement
              assignmentStatement
                designator
                expression0
                  expression1
                    expression2
                      expression3
                        literal
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            designator> but was: <line 5:8 no viable alternative at input 'a=42;'
line 6:12 mismatched input ')' expecting {'Add', 'Subtract', 'OR', '['}>
	at crux.CompilerStageTests.lambda$parseTree$1(CompilerStageTests.java:88)
]]></failure>
  </testcase>
  <testcase name="parseTree" classname="crux.CompilerStageTests" time="0.004">
    <failure type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
Parse tree for program crux/stages/parse-tree/test08.crx differs from expected output. ==> expected: <program
  declarationList
    declaration
      functionDefinition
        type
        parameterList
        statementBlock
          statementList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            literal
    declaration
      functionDefinition
        type
        parameterList
        statementBlock
          statementList
            statement
              callStatement
                callExpression
                  expressionList> but was: <line 4:12 mismatched input ')' expecting {'Add', 'Subtract', 'OR'}>
	at crux.CompilerStageTests.lambda$parseTree$1(CompilerStageTests.java:88)
]]></failure>
  </testcase>
  <testcase name="parseTree" classname="crux.CompilerStageTests" time="0.005">
    <failure type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
Parse tree for program crux/stages/parse-tree/test09.crx differs from expected output. ==> expected: <program
  declarationList
    declaration
      functionDefinition
        type
        parameterList
          parameter
            type
        statementBlock
          statementList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            designator
    declaration
      functionDefinition
        type
        parameterList
        statementBlock
          statementList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            literal> but was: <line 4:12 mismatched input ')' expecting {'Add', 'Subtract', 'OR', '['}
line 8:8 mismatched input ')' expecting {'Add', 'Subtract', 'OR'}>
	at crux.CompilerStageTests.lambda$parseTree$1(CompilerStageTests.java:88)
]]></failure>
  </testcase>
  <testcase name="parseTree" classname="crux.CompilerStageTests" time="0.008">
    <failure type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
Parse tree for program crux/stages/parse-tree/test10.crx differs from expected output. ==> expected: <program
  declarationList
    declaration
      arrayDeclaration
        type
    declaration
      functionDefinition
        type
        parameterList
        statementBlock
          statementList
            statement
              assignmentStatement
                designator
                  expression0
                    expression1
                      expression2
                        expression3
                          literal
                expression0
                  expression1
                    expression2
                      expression3
                        literal
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            designator
                              expression0
                                expression1
                                  expression2
                                    expression3
                                      literal> but was: <line 5:5 no viable alternative at input 'x[1]'
line 6:14 mismatched input ']' expecting {'Add', 'Subtract', 'OR'}
line 6:15 mismatched input ')' expecting {'Add', 'Subtract', 'OR'}>
	at crux.CompilerStageTests.lambda$parseTree$1(CompilerStageTests.java:88)
]]></failure>
  </testcase>
  <testcase name="parseTree" classname="crux.CompilerStageTests" time="0.013">
    <failure type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
Parse tree for program crux/stages/parse-tree/test11.crx differs from expected output. ==> expected: <program
  declarationList
    declaration
      functionDefinition
        type
        parameterList
        statementBlock
          statementList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            literal
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            literal
            statement
              callStatement
                callExpression
                  expressionList
            statement
              callStatement
                callExpression
                  expressionList> but was: <line 4:12 mismatched input ')' expecting {'Add', 'Subtract', 'OR'}
line 5:16 mismatched input ')' expecting {'Add', 'Subtract', 'OR'}>
	at crux.CompilerStageTests.lambda$parseTree$1(CompilerStageTests.java:88)
]]></failure>
  </testcase>
  <testcase name="parseTree" classname="crux.CompilerStageTests" time="0.006">
    <failure type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
Parse tree for program crux/stages/parse-tree/test12.crx differs from expected output. ==> expected: <program
  declarationList
    declaration
      functionDefinition
        type
        parameterList
        statementBlock
          statementList
            statement
              ifStatement
                expression0
                  expression1
                    expression2
                      expression3
                        expression0
                          expression1
                            expression2
                              expression3
                                literal
                statementBlock
                  statementList
                    statement
                      callStatement
                        callExpression
                          expressionList
                            expression0
                              expression1
                                expression2
                                  expression3
                                    literal
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression1
                          expression2
                            expression3
                              literal
                        op1
                        expression2
                          expression3
                            literal> but was: <line 4:10 mismatched input ')' expecting {'Add', 'Subtract', 'OR'}
line 4:12 mismatched input '{' expecting {'Add', 'Subtract', 'OR'}
line 5:14 mismatched input ')' expecting {'Add', 'Subtract', 'OR'}
line 7:12 mismatched input '-' expecting {'Add', 'Subtract', 'OR'}>
	at crux.CompilerStageTests.lambda$parseTree$1(CompilerStageTests.java:88)
]]></failure>
  </testcase>
  <testcase name="parseTree" classname="crux.CompilerStageTests" time="0.005">
    <failure type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
Parse tree for program crux/stages/parse-tree/test13.crx differs from expected output. ==> expected: <program
  declarationList
    declaration
      functionDefinition
        type
        parameterList
        statementBlock
          statementList
            statement
              returnStatement
                expression0
                  expression1
                    expression2
                      expression3
                        callExpression
                          expressionList
    declaration
      functionDefinition
        type
        parameterList
        statementBlock
          statementList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            callExpression
                              expressionList> but was: <line 4:18 mismatched input ';' expecting {'Mult', 'Div', 'AND', Integer, 'true', 'false', '!', Identifier, '(', ')'}
line 8:18 mismatched input ')' expecting {'Mult', 'Div', 'AND', Integer, 'true', 'false', '!', Identifier, '(', ')'}>
	at crux.CompilerStageTests.lambda$parseTree$1(CompilerStageTests.java:88)
]]></failure>
  </testcase>
  <testcase name="parseTree" classname="crux.CompilerStageTests" time="0.005">
    <failure type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
Parse tree for program crux/stages/parse-tree/test14.crx differs from expected output. ==> expected: <program
  declarationList
    declaration
      variableDeclaration
        type
    declaration
      functionDefinition
        type
        parameterList
        statementBlock
          statementList
            statement
              assignmentStatement
                designator
                expression0
                  expression1
                    expression2
                      expression3
                        callExpression
                          expressionList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            designator> but was: <line 4:18 no viable alternative at input 'addi=readInt();'
line 5:15 mismatched input ')' expecting {'Add', 'Subtract', 'OR', '['}>
	at crux.CompilerStageTests.lambda$parseTree$1(CompilerStageTests.java:88)
]]></failure>
  </testcase>
  <testcase name="parseTree" classname="crux.CompilerStageTests" time="0.004">
    <failure type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
Parse tree for program crux/stages/parse-tree/test15.crx differs from expected output. ==> expected: <program
  declarationList
    declaration
      functionDefinition
        type
        parameterList
        statementBlock
          statementList
            statement
              ifStatement
                expression0
                  expression1
                    expression2
                      expression3
                        expression0
                          expression1
                            expression2
                              expression3
                                literal
                statementBlock
                  statementList
                    statement
                      callStatement
                        callExpression
                          expressionList
                            expression0
                              expression1
                                expression2
                                  expression3
                                    literal
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression1
                          expression2
                            expression3
                              literal
                        op1
                        expression2
                          expression3
                            literal> but was: <line 4:11 mismatched input ')' expecting {'Add', 'Subtract', 'OR'}
line 4:13 mismatched input '{' expecting {'Add', 'Subtract', 'OR'}
line 5:14 mismatched input ')' expecting {'Add', 'Subtract', 'OR'}
line 7:12 mismatched input '-' expecting {'Add', 'Subtract', 'OR'}>
	at crux.CompilerStageTests.lambda$parseTree$1(CompilerStageTests.java:88)
]]></failure>
  </testcase>
  <testcase name="parseTree" classname="crux.CompilerStageTests" time="0.005">
    <failure type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
Parse tree for program crux/stages/parse-tree/test16.crx differs from expected output. ==> expected: <program
  declarationList
    declaration
      variableDeclaration
        type
    declaration
      functionDefinition
        type
        parameterList
        statementBlock
          statementList
            statement
              assignmentStatement
                designator
                expression0
                  expression1
                    expression2
                      expression3
                        literal
            statement
              variableDeclaration
                type
            statement
              assignmentStatement
                designator
                expression0
                  expression1
                    expression2
                      expression3
                        literal
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            designator> but was: <line 6:7 no viable alternative at input 'a=1;'
line 9:7 no viable alternative at input 'a=2;'
line 10:12 mismatched input ')' expecting {'Add', 'Subtract', 'OR', '['}>
	at crux.CompilerStageTests.lambda$parseTree$1(CompilerStageTests.java:88)
]]></failure>
  </testcase>
  <testcase name="parseTree" classname="crux.CompilerStageTests" time="0.007">
    <failure type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
Parse tree for program crux/stages/parse-tree/test17.crx differs from expected output. ==> expected: <program
  declarationList
    declaration
      variableDeclaration
        type
    declaration
      functionDefinition
        type
        parameterList
        statementBlock
          statementList
            statement
              forStatement
                assignmentStatement
                  designator
                  expression0
                    expression1
                      expression2
                        expression3
                          literal
                expression0
                  expression1
                    expression2
                      expression3
                        designator
                  op0
                  expression1
                    expression2
                      expression3
                        literal
                assignmentStatementNoSemi
                  designator
                  expression0
                    expression1
                      expression1
                        expression2
                          expression3
                            designator
                      op1
                      expression2
                        expression3
                          literal
                statementBlock
                  statementList
                    statement
                      ifStatement
                        expression0
                          expression1
                            expression2
                              expression3
                                expression0
                                  expression1
                                    expression2
                                      expression3
                                        designator
                                  op0
                                  expression1
                                    expression2
                                      expression3
                                        literal
                        statementBlock
                          statementList
                            statement
                              ifStatement
                                expression0
                                  expression1
                                    expression2
                                      expression3
                                        expression0
                                          expression1
                                            expression2
                                              expression3
                                                designator
                                          op0
                                          expression1
                                            expression2
                                              expression3
                                                literal
                                statementBlock
                                  statementList
                                    statement
                                      breakStatement
                            statement
                              assignmentStatement
                                designator
                                expression0
                                  expression1
                                    expression2
                                      expression2
                                        expression3
                                          designator
                                      op2
                                      expression3
                                        literal> but was: <line 5:12 mismatched input ';' expecting {'Add', 'Subtract', 'OR'}
line 5:16 mismatched input '>' expecting {'Add', 'Subtract', 'OR', '['}
line 5:27 mismatched input '-' expecting {'Add', 'Subtract', 'OR', '['}
line 6:10 mismatched input '>' expecting {'Add', 'Subtract', 'OR', '['}
line 6:16 mismatched input '{' expecting {'Add', 'Subtract', 'OR', '['}
line 7:12 mismatched input '<' expecting {'Add', 'Subtract', 'OR', '['}
line 7:17 mismatched input '{' expecting {'Add', 'Subtract', 'OR', '['}
line 10:12 no viable alternative at input 'a=a/'>
	at crux.CompilerStageTests.lambda$parseTree$1(CompilerStageTests.java:88)
]]></failure>
  </testcase>
  <testcase name="parseTree" classname="crux.CompilerStageTests" time="0.008">
    <failure type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
Parse tree for program crux/stages/parse-tree/test18.crx differs from expected output. ==> expected: <program
  declarationList
    declaration
      functionDefinition
        type
        parameterList
        statementBlock
          statementList
            statement
              variableDeclaration
                type
            statement
              forStatement
                assignmentStatement
                  designator
                  expression0
                    expression1
                      expression2
                        expression3
                          literal
                expression0
                  expression1
                    expression2
                      expression3
                        designator
                  op0
                  expression1
                    expression2
                      expression3
                        literal
                assignmentStatementNoSemi
                  designator
                  expression0
                    expression1
                      expression1
                        expression2
                          expression3
                            designator
                      op1
                      expression2
                        expression3
                          literal
                statementBlock
                  statementList
                    statement
                      callStatement
                        callExpression
                          expressionList
                            expression0
                              expression1
                                expression2
                                  expression3
                                    designator
                    statement
                      callStatement
                        callExpression
                          expressionList> but was: <line 5:12 mismatched input ';' expecting {'Add', 'Subtract', 'OR'}
line 5:16 mismatched input '<' expecting {'Add', 'Subtract', 'OR', '['}
line 5:27 mismatched input '+' expecting {'Add', 'Subtract', 'OR', '['}
line 6:14 mismatched input ')' expecting {'Add', 'Subtract', 'OR', '['}>
	at crux.CompilerStageTests.lambda$parseTree$1(CompilerStageTests.java:88)
]]></failure>
  </testcase>
  <testcase name="parseTree" classname="crux.CompilerStageTests" time="0.005">
    <failure type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
Parse tree for program crux/stages/parse-tree/test19.crx differs from expected output. ==> expected: <program
  declarationList
    declaration
      functionDefinition
        type
        parameterList
          parameter
            type
        statementBlock
          statementList
            statement
              ifStatement
                expression0
                  expression1
                    expression2
                      expression3
                        expression0
                          expression1
                            expression2
                              expression3
                                designator
                          op0
                          expression1
                            expression2
                              expression3
                                literal
                statementBlock
                  statementList
                    statement
                      callStatement
                        callExpression
                          expressionList
                            expression0
                              expression1
                                expression1
                                  expression2
                                    expression3
                                      designator
                                op1
                                expression2
                                  expression3
                                    literal
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            designator
            statement
              callStatement
                callExpression
                  expressionList
    declaration
      functionDefinition
        type
        parameterList
        statementBlock
          statementList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            literal> but was: <line 4:8 mismatched input '>' expecting {'Add', 'Subtract', 'OR', '['}
line 4:13 mismatched input '{' expecting {'Add', 'Subtract', 'OR', '['}
line 5:9 mismatched input '-' expecting {'Add', 'Subtract', 'OR', '['}
line 7:12 mismatched input ')' expecting {'Add', 'Subtract', 'OR', '['}
line 12:7 mismatched input ')' expecting {'Add', 'Subtract', 'OR'}>
	at crux.CompilerStageTests.lambda$parseTree$1(CompilerStageTests.java:88)
]]></failure>
  </testcase>
  <testcase name="parseTree" classname="crux.CompilerStageTests" time="0.004">
    <failure type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
Parse tree for program crux/stages/parse-tree/test20.crx differs from expected output. ==> expected: <program
  declarationList
    declaration
      functionDefinition
        type
        parameterList
        statementBlock
          statementList
            statement
              variableDeclaration
                type
            statement
              variableDeclaration
                type
            statement
              assignmentStatement
                designator
                expression0
                  expression1
                    expression1
                      expression2
                        expression3
                          literal
                    op1
                    expression2
                      expression3
                        literal
            statement
              assignmentStatement
                designator
                expression0
                  expression1
                    expression2
                      expression2
                        expression3
                          designator
                      op2
                      expression3
                        literal
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            designator
            statement
              callStatement
                callExpression
                  expressionList> but was: <line 8:13 no viable alternative at input 'five=100-'
line 10:15 mismatched input ')' expecting {'Add', 'Subtract', 'OR', '['}>
	at crux.CompilerStageTests.lambda$parseTree$1(CompilerStageTests.java:88)
]]></failure>
  </testcase>
  <testcase name="parseTree" classname="crux.CompilerStageTests" time="0.005">
    <failure type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
Parse tree for program crux/stages/parse-tree/test21.crx differs from expected output. ==> expected: <program
  declarationList
    declaration
      functionDefinition
        type
        parameterList
        statementBlock
          statementList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            literal
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            literal
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            literal
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            literal
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            literal
            statement
              callStatement
                callExpression
                  expressionList> but was: <line 4:14 mismatched input ')' expecting {'Add', 'Subtract', 'OR'}
line 5:15 mismatched input ')' expecting {'Add', 'Subtract', 'OR'}
line 6:15 mismatched input ')' expecting {'Add', 'Subtract', 'OR'}
line 7:15 mismatched input ')' expecting {'Add', 'Subtract', 'OR'}
line 8:15 mismatched input ')' expecting {'Add', 'Subtract', 'OR'}>
	at crux.CompilerStageTests.lambda$parseTree$1(CompilerStageTests.java:88)
]]></failure>
  </testcase>
  <testcase name="parseTree" classname="crux.CompilerStageTests" time="0.015">
    <failure type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
Parse tree for program crux/stages/parse-tree/test22.crx differs from expected output. ==> expected: <program
  declarationList
    declaration
      arrayDeclaration
        type
    declaration
      arrayDeclaration
        type
    declaration
      functionDefinition
        type
        parameterList
        statementBlock
          statementList
            statement
              assignmentStatement
                designator
                  expression0
                    expression1
                      expression2
                        expression3
                          literal
                expression0
                  expression1
                    expression2
                      expression3
                        literal
            statement
              assignmentStatement
                designator
                  expression0
                    expression1
                      expression1
                        expression2
                          expression3
                            literal
                      op1
                      expression2
                        expression3
                          literal
                expression0
                  expression1
                    expression2
                      expression3
                        literal
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            designator
                              expression0
                                expression1
                                  expression2
                                    expression3
                                      literal> but was: <line 8:6 no viable alternative at input 'b[5]'
line 11:14 mismatched input ']' expecting {'Add', 'Subtract', 'OR'}
line 11:15 mismatched input ')' expecting {'Add', 'Subtract', 'OR'}>
	at crux.CompilerStageTests.lambda$parseTree$1(CompilerStageTests.java:88)
]]></failure>
  </testcase>
  <testcase name="parseTree" classname="crux.CompilerStageTests" time="0.007">
    <failure type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
Parse tree for program crux/stages/parse-tree/test23.crx differs from expected output. ==> expected: <program
  declarationList
    declaration
      variableDeclaration
        type
    declaration
      variableDeclaration
        type
    declaration
      arrayDeclaration
        type
    declaration
      functionDefinition
        type
        parameterList
        statementBlock
          statementList
            statement
              assignmentStatement
                designator
                expression0
                  expression1
                    expression2
                      expression3
                        literal
            statement
              assignmentStatement
                designator
                expression0
                  expression1
                    expression2
                      expression3
                        literal
            statement
              assignmentStatement
                designator
                  expression0
                    expression1
                      expression2
                        expression3
                          literal
                expression0
                  expression1
                    expression2
                      expression3
                        literal> but was: <line 8:7 no viable alternative at input 'a=0;'>
	at crux.CompilerStageTests.lambda$parseTree$1(CompilerStageTests.java:88)
]]></failure>
  </testcase>
  <testcase name="parseTree" classname="crux.CompilerStageTests" time="0.005">
    <failure type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
Parse tree for program crux/stages/parse-tree/test24.crx differs from expected output. ==> expected: <program
  declarationList
    declaration
      arrayDeclaration
        type
    declaration
      arrayDeclaration
        type
    declaration
      functionDefinition
        type
        parameterList
        statementBlock
          statementList
            statement
              assignmentStatement
                designator
                  expression0
                    expression1
                      expression2
                        expression3
                          literal
                expression0
                  expression1
                    expression2
                      expression3
                        literal
            statement
              assignmentStatement
                designator
                  expression0
                    expression1
                      expression2
                        expression3
                          designator
                            expression0
                              expression1
                                expression2
                                  expression3
                                    literal
                expression0
                  expression1
                    expression2
                      expression3
                        literal
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            designator
                              expression0
                                expression1
                                  expression2
                                    expression3
                                      literal> but was: <line 8:5 no viable alternative at input 'b[5]'
line 11:14 mismatched input ']' expecting {'Add', 'Subtract', 'OR'}
line 11:15 mismatched input ')' expecting {'Add', 'Subtract', 'OR'}>
	at crux.CompilerStageTests.lambda$parseTree$1(CompilerStageTests.java:88)
]]></failure>
  </testcase>
  <testcase name="parseTree" classname="crux.CompilerStageTests" time="0.005">
    <failure type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
Parse tree for program crux/stages/parse-tree/test25.crx differs from expected output. ==> expected: <program
  declarationList
    declaration
      functionDefinition
        type
        parameterList
        statementBlock
          statementList
            statement
              ifStatement
                expression0
                  expression1
                    expression2
                      expression3
                        expression0
                          expression1
                            expression2
                              expression3
                                literal
                statementBlock
                  statementList
                    statement
                      callStatement
                        callExpression
                          expressionList
                            expression0
                              expression1
                                expression2
                                  expression3
                                    literal
                statementBlock
                  statementList
                    statement
                      callStatement
                        callExpression
                          expressionList
                            expression0
                              expression1
                                expression2
                                  expression3
                                    literal
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression1
                          expression2
                            expression3
                              literal
                        op1
                        expression2
                          expression3
                            literal> but was: <line 4:11 mismatched input ')' expecting {'Add', 'Subtract', 'OR'}
line 4:13 mismatched input '{' expecting {'Add', 'Subtract', 'OR'}
line 5:14 mismatched input ')' expecting {'Add', 'Subtract', 'OR'}
line 7:14 mismatched input ')' expecting {'Add', 'Subtract', 'OR'}
line 9:12 mismatched input '-' expecting {'Add', 'Subtract', 'OR'}>
	at crux.CompilerStageTests.lambda$parseTree$1(CompilerStageTests.java:88)
]]></failure>
  </testcase>
  <testcase name="parseTree" classname="crux.CompilerStageTests" time="0.005">
    <failure type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
Parse tree for program crux/stages/parse-tree/test26.crx differs from expected output. ==> expected: <program
  declarationList
    declaration
      variableDeclaration
        type
    declaration
      functionDefinition
        type
        parameterList
        statementBlock
          statementList
            statement
              forStatement
                assignmentStatement
                  designator
                  expression0
                    expression1
                      expression2
                        expression3
                          literal
                expression0
                  expression1
                    expression2
                      expression3
                        designator
                  op0
                  expression1
                    expression2
                      expression3
                        literal
                assignmentStatementNoSemi
                  designator
                  expression0
                    expression1
                      expression1
                        expression2
                          expression3
                            designator
                      op1
                      expression2
                        expression3
                          literal
                statementBlock
                  statementList
                    statement
                      callStatement
                        callExpression
                          expressionList
                            expression0
                              expression1
                                expression2
                                  expression3
                                    designator
                    statement
                      callStatement
                        callExpression
                          expressionList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression1
                          expression2
                            expression3
                              literal
                        op1
                        expression2
                          expression3
                            literal
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            designator> but was: <line 6:11 mismatched input ';' expecting {'Add', 'Subtract', 'OR'}
line 6:15 mismatched input '>' expecting {'Add', 'Subtract', 'OR', '['}
line 6:26 mismatched input '-' expecting {'Add', 'Subtract', 'OR', '['}
line 7:14 mismatched input ')' expecting {'Add', 'Subtract', 'OR', '['}
line 10:12 mismatched input '-' expecting {'Add', 'Subtract', 'OR'}
line 11:12 mismatched input ')' expecting {'Add', 'Subtract', 'OR', '['}>
	at crux.CompilerStageTests.lambda$parseTree$1(CompilerStageTests.java:88)
]]></failure>
  </testcase>
  <testcase name="parseTree" classname="crux.CompilerStageTests" time="0.008">
    <failure type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
Parse tree for program crux/stages/parse-tree/test27.crx differs from expected output. ==> expected: <program
  declarationList
    declaration
      functionDefinition
        type
        parameterList
          parameter
            type
        statementBlock
          statementList
            statement
              ifStatement
                expression0
                  expression1
                    expression2
                      expression3
                        expression0
                          expression1
                            expression2
                              expression3
                                designator
                          op0
                          expression1
                            expression2
                              expression3
                                literal
                statementBlock
                  statementList
                    statement
                      returnStatement
                        expression0
                          expression1
                            expression2
                              expression3
                                literal
            statement
              returnStatement
                expression0
                  expression1
                    expression1
                      expression2
                        expression3
                          callExpression
                            expressionList
                              expression0
                                expression1
                                  expression1
                                    expression2
                                      expression3
                                        designator
                                  op1
                                  expression2
                                    expression3
                                      literal
                    op1
                    expression2
                      expression3
                        callExpression
                          expressionList
                            expression0
                              expression1
                                expression1
                                  expression2
                                    expression3
                                      designator
                                op1
                                expression2
                                  expression3
                                    literal
    declaration
      functionDefinition
        type
        parameterList
        statementBlock
          statementList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            callExpression
                              expressionList
                                expression0
                                  expression1
                                    expression2
                                      expression3
                                        literal> but was: <line 4:8 mismatched input '<=' expecting {'Add', 'Subtract', 'OR', '['}
line 4:14 mismatched input '{' expecting {'Add', 'Subtract', 'OR', '['}
line 4:24 mismatched input ';' expecting {'Add', 'Subtract', 'OR'}
line 5:14 mismatched input '-' expecting {'Add', 'Subtract', 'OR', '['}
line 5:18 mismatched input '+' expecting {'Add', 'Subtract', 'OR', '['}
line 5:25 mismatched input '-' expecting {'Add', 'Subtract', 'OR', '['}
line 9:16 mismatched input ')' expecting {'Add', 'Subtract', 'OR'}
line 9:17 mismatched input ')' expecting {'Add', 'Subtract', 'OR'}>
	at crux.CompilerStageTests.lambda$parseTree$1(CompilerStageTests.java:88)
]]></failure>
  </testcase>
  <testcase name="parseTree" classname="crux.CompilerStageTests" time="0.005">
    <failure type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
Parse tree for program crux/stages/parse-tree/test28.crx differs from expected output. ==> expected: <program
  declarationList
    declaration
      functionDefinition
        type
        parameterList
          parameter
            type
        statementBlock
          statementList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            designator
            statement
              returnStatement
                expression0
                  expression1
                    expression2
                      expression3
                        designator
    declaration
      functionDefinition
        type
        parameterList
        statementBlock
          statementList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            literal
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            literal
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            literal
    declaration
      functionDefinition
        type
        parameterList
        statementBlock
          statementList
            statement
              callStatement
                callExpression
                  expressionList> but was: <line 4:12 mismatched input ')' expecting {'Add', 'Subtract', 'OR', '['}
line 5:10 mismatched input ';' expecting {'Add', 'Subtract', 'OR', '['}
line 9:9 mismatched input ')' expecting {'Add', 'Subtract', 'OR'}
line 10:9 mismatched input ')' expecting {'Add', 'Subtract', 'OR'}
line 11:9 mismatched input ')' expecting {'Add', 'Subtract', 'OR'}>
	at crux.CompilerStageTests.lambda$parseTree$1(CompilerStageTests.java:88)
]]></failure>
  </testcase>
  <testcase name="parseTree" classname="crux.CompilerStageTests" time="0.008">
    <failure type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
Parse tree for program crux/stages/parse-tree/test29.crx differs from expected output. ==> expected: <program
  declarationList
    declaration
      functionDefinition
        type
        parameterList
          parameter
            type
          parameter
            type
        statementBlock
          statementList
            statement
              returnStatement
                expression0
                  expression1
                    expression2
                      expression3
                        designator
                  op0
                  expression1
                    expression2
                      expression3
                        designator
    declaration
      functionDefinition
        type
        parameterList
        statementBlock
          statementList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            callExpression
                              expressionList
                                expression0
                                  expression1
                                    expression2
                                      expression3
                                        literal
                                expression0
                                  expression1
                                    expression2
                                      expression3
                                        literal
            statement
              callStatement
                callExpression
                  expressionList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            callExpression
                              expressionList
                                expression0
                                  expression1
                                    expression2
                                      expression3
                                        literal
                                expression0
                                  expression1
                                    expression2
                                      expression3
                                        literal
            statement
              callStatement
                callExpression
                  expressionList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            callExpression
                              expressionList
                                expression0
                                  expression1
                                    expression2
                                      expression3
                                        literal
                                expression0
                                  expression1
                                    expression2
                                      expression3
                                        literal> but was: <line 4:11 mismatched input '<' expecting {'Add', 'Subtract', 'OR', '['}
line 8:17 mismatched input ',' expecting {'Add', 'Subtract', 'OR'}
line 8:19 mismatched input ')' expecting {'Add', 'Subtract', 'OR'}
line 8:20 mismatched input ')' expecting {'Add', 'Subtract', 'OR'}
line 10:17 mismatched input ',' expecting {'Add', 'Subtract', 'OR'}
line 10:19 mismatched input ')' expecting {'Add', 'Subtract', 'OR'}
line 10:20 mismatched input ')' expecting {'Add', 'Subtract', 'OR'}
line 12:17 mismatched input ',' expecting {'Add', 'Subtract', 'OR'}
line 12:19 mismatched input ')' expecting {'Add', 'Subtract', 'OR'}
line 12:20 mismatched input ')' expecting {'Add', 'Subtract', 'OR'}>
	at crux.CompilerStageTests.lambda$parseTree$1(CompilerStageTests.java:88)
]]></failure>
  </testcase>
  <testcase name="parseTree" classname="crux.CompilerStageTests" time="0.005">
    <failure type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
Parse tree for program crux/stages/parse-tree/test30.crx differs from expected output. ==> expected: <program
  declarationList
    declaration
      variableDeclaration
        type
    declaration
      arrayDeclaration
        type
    declaration
      variableDeclaration
        type
    declaration
      functionDefinition
        type
        parameterList
        statementBlock
          statementList
            statement
              assignmentStatement
                designator
                expression0
                  expression1
                    expression2
                      expression3
                        literal
            statement
              assignmentStatement
                designator
                expression0
                  expression1
                    expression2
                      expression3
                        literal
            statement
              assignmentStatement
                designator
                  expression0
                    expression1
                      expression2
                        expression3
                          literal
                expression0
                  expression1
                    expression2
                      expression3
                        literal
            statement
              assignmentStatement
                designator
                  expression0
                    expression1
                      expression2
                        expression3
                          literal
                expression0
                  expression1
                    expression2
                      expression3
                        literal
            statement
              assignmentStatement
                designator
                  expression0
                    expression1
                      expression2
                        expression3
                          literal
                expression0
                  expression1
                    expression2
                      expression3
                        literal
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            designator
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            designator
                              expression0
                                expression1
                                  expression2
                                    expression3
                                      literal
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            designator
                              expression0
                                expression1
                                  expression2
                                    expression3
                                      literal
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            designator
                              expression0
                                expression1
                                  expression2
                                    expression3
                                      literal
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            designator> but was: <line 7:18 no viable alternative at input 'canary_begin=0;'
line 12:23 mismatched input ')' expecting {'Add', 'Subtract', 'OR', '['}
line 13:14 mismatched input ']' expecting {'Add', 'Subtract', 'OR'}
line 13:15 mismatched input ')' expecting {'Add', 'Subtract', 'OR'}
line 14:14 mismatched input ']' expecting {'Add', 'Subtract', 'OR'}
line 14:15 mismatched input ')' expecting {'Add', 'Subtract', 'OR'}
line 15:14 mismatched input ']' expecting {'Add', 'Subtract', 'OR'}
line 15:15 mismatched input ')' expecting {'Add', 'Subtract', 'OR'}
line 16:21 mismatched input ')' expecting {'Add', 'Subtract', 'OR', '['}>
	at crux.CompilerStageTests.lambda$parseTree$1(CompilerStageTests.java:88)
]]></failure>
  </testcase>
  <testcase name="parseTree" classname="crux.CompilerStageTests" time="0.005">
    <failure type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
Parse tree for program crux/stages/parse-tree/test31.crx differs from expected output. ==> expected: <program
  declarationList
    declaration
      variableDeclaration
        type
    declaration
      functionDefinition
        type
        parameterList
          parameter
            type
        statementBlock
          statementList
            statement
              assignmentStatement
                designator
                expression0
                  expression1
                    expression2
                      expression3
                        literal
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            designator
            statement
              callStatement
                callExpression
                  expressionList
    declaration
      functionDefinition
        type
        parameterList
        statementBlock
          statementList
            statement
              variableDeclaration
                type
            statement
              assignmentStatement
                designator
                expression0
                  expression1
                    expression2
                      expression3
                        literal
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            designator
            statement
              callStatement
                callExpression
                  expressionList
    declaration
      functionDefinition
        type
        parameterList
        statementBlock
          statementList
            statement
              assignmentStatement
                designator
                expression0
                  expression1
                    expression2
                      expression3
                        literal
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            designator
            statement
              callStatement
                callExpression
                  expressionList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            literal
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            designator
            statement
              callStatement
                callExpression
                  expressionList
            statement
              callStatement
                callExpression
                  expressionList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            designator
            statement
              callStatement
                callExpression
                  expressionList> but was: <line 6:7 no viable alternative at input 'a=7;'
line 7:12 mismatched input ')' expecting {'Add', 'Subtract', 'OR', '['}
line 13:7 no viable alternative at input 'a=9;'
line 14:12 mismatched input ')' expecting {'Add', 'Subtract', 'OR', '['}
line 19:7 no viable alternative at input 'a=5;'
line 20:12 mismatched input ')' expecting {'Add', 'Subtract', 'OR', '['}
line 23:19 mismatched input ')' expecting {'Add', 'Subtract', 'OR'}
line 24:12 mismatched input ')' expecting {'Add', 'Subtract', 'OR', '['}
line 28:12 mismatched input ')' expecting {'Add', 'Subtract', 'OR', '['}>
	at crux.CompilerStageTests.lambda$parseTree$1(CompilerStageTests.java:88)
]]></failure>
  </testcase>
  <testcase name="parseTree" classname="crux.CompilerStageTests" time="0.005">
    <failure type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
Parse tree for program crux/stages/parse-tree/test32.crx differs from expected output. ==> expected: <program
  declarationList
    declaration
      functionDefinition
        type
        parameterList
        statementBlock
          statementList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            literal
            statement
              callStatement
                callExpression
                  expressionList
            statement
              returnStatement
                expression0
                  expression1
                    expression2
                      expression3
                        literal
    declaration
      functionDefinition
        type
        parameterList
        statementBlock
          statementList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            literal
            statement
              callStatement
                callExpression
                  expressionList
            statement
              returnStatement
                expression0
                  expression1
                    expression2
                      expression3
                        literal
    declaration
      functionDefinition
        type
        parameterList
        statementBlock
          statementList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression1
                          expression2
                            expression3
                              callExpression
                                expressionList
                        op1
                        expression2
                          expression3
                            callExpression
                              expressionList
            statement
              callStatement
                callExpression
                  expressionList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression1
                          expression2
                            expression3
                              callExpression
                                expressionList
                        op1
                        expression2
                          expression3
                            callExpression
                              expressionList
            statement
              callStatement
                callExpression
                  expressionList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression1
                          expression2
                            expression3
                              callExpression
                                expressionList
                        op1
                        expression2
                          expression3
                            callExpression
                              expressionList
            statement
              callStatement
                callExpression
                  expressionList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression1
                          expression2
                            expression3
                              callExpression
                                expressionList
                        op1
                        expression2
                          expression3
                            callExpression
                              expressionList
            statement
              callStatement
                callExpression
                  expressionList> but was: <line 3:12 mismatched input ')' expecting {'Add', 'Subtract', 'OR'}
line 5:13 mismatched input ';' expecting {'Add', 'Subtract', 'OR'}
line 9:12 mismatched input ')' expecting {'Add', 'Subtract', 'OR'}
line 11:14 mismatched input ';' expecting {'Add', 'Subtract', 'OR'}
line 15:21 mismatched input '||' expecting {'Mult', 'Div', 'AND', Integer, 'true', 'false', '!', Identifier, '(', ')'}
line 17:22 mismatched input '||' expecting {'Mult', 'Div', 'AND', Integer, 'true', 'false', '!', Identifier, '(', ')'}
line 19:21 mismatched input '||' expecting {'Mult', 'Div', 'AND', Integer, 'true', 'false', '!', Identifier, '(', ')'}
line 21:22 mismatched input '||' expecting {'Mult', 'Div', 'AND', Integer, 'true', 'false', '!', Identifier, '(', ')'}>
	at crux.CompilerStageTests.lambda$parseTree$1(CompilerStageTests.java:88)
]]></failure>
  </testcase>
  <testcase name="parseTree" classname="crux.CompilerStageTests" time="0.008">
    <failure type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
Parse tree for program crux/stages/parse-tree/test33.crx differs from expected output. ==> expected: <program
  declarationList
    declaration
      functionDefinition
        type
        parameterList
        statementBlock
          statementList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            literal
            statement
              callStatement
                callExpression
                  expressionList
            statement
              returnStatement
                expression0
                  expression1
                    expression2
                      expression3
                        literal
    declaration
      functionDefinition
        type
        parameterList
        statementBlock
          statementList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            literal
            statement
              callStatement
                callExpression
                  expressionList
            statement
              returnStatement
                expression0
                  expression1
                    expression2
                      expression3
                        literal
    declaration
      functionDefinition
        type
        parameterList
        statementBlock
          statementList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression2
                            expression3
                              callExpression
                                expressionList
                          op2
                          expression3
                            callExpression
                              expressionList
            statement
              callStatement
                callExpression
                  expressionList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression2
                            expression3
                              callExpression
                                expressionList
                          op2
                          expression3
                            callExpression
                              expressionList
            statement
              callStatement
                callExpression
                  expressionList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression2
                            expression3
                              callExpression
                                expressionList
                          op2
                          expression3
                            callExpression
                              expressionList
            statement
              callStatement
                callExpression
                  expressionList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression2
                            expression3
                              callExpression
                                expressionList
                          op2
                          expression3
                            callExpression
                              expressionList
            statement
              callStatement
                callExpression
                  expressionList> but was: <line 3:12 mismatched input ')' expecting {'Add', 'Subtract', 'OR'}
line 5:13 mismatched input ';' expecting {'Add', 'Subtract', 'OR'}
line 9:12 mismatched input ')' expecting {'Add', 'Subtract', 'OR'}
line 11:14 mismatched input ';' expecting {'Add', 'Subtract', 'OR'}
line 15:21 mismatched input '&&' expecting {'Mult', 'Div', 'AND', Integer, 'true', 'false', '!', Identifier, '(', ')'}
line 17:22 mismatched input '&&' expecting {'Mult', 'Div', 'AND', Integer, 'true', 'false', '!', Identifier, '(', ')'}
line 19:21 mismatched input '&&' expecting {'Mult', 'Div', 'AND', Integer, 'true', 'false', '!', Identifier, '(', ')'}
line 21:22 mismatched input '&&' expecting {'Mult', 'Div', 'AND', Integer, 'true', 'false', '!', Identifier, '(', ')'}>
	at crux.CompilerStageTests.lambda$parseTree$1(CompilerStageTests.java:88)
]]></failure>
  </testcase>
  <testcase name="parseTree" classname="crux.CompilerStageTests" time="0.014">
    <failure type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
Parse tree for program crux/stages/parse-tree/test34.crx differs from expected output. ==> expected: <program
  declarationList
    declaration
      functionDefinition
        type
        parameterList
        statementBlock
          statementList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression1
                          expression2
                            expression2
                              expression3
                                literal
                            op2
                            expression3
                              literal
                        op1
                        expression2
                          expression3
                            literal
            statement
              callStatement
                callExpression
                  expressionList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression1
                          expression2
                            expression3
                              literal
                        op1
                        expression2
                          expression2
                            expression3
                              literal
                          op2
                          expression3
                            literal
            statement
              callStatement
                callExpression
                  expressionList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression1
                          expression1
                            expression2
                              expression3
                                literal
                          op1
                          expression2
                            expression3
                              literal
                        op1
                        expression2
                          expression3
                            literal
            statement
              callStatement
                callExpression
                  expressionList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression1
                          expression1
                            expression2
                              expression3
                                literal
                          op1
                          expression2
                            expression3
                              literal
                        op1
                        expression2
                          expression3
                            literal
            statement
              callStatement
                callExpression
                  expressionList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression1
                          expression2
                            expression2
                              expression3
                                literal
                            op2
                            expression3
                              literal
                        op1
                        expression2
                          expression3
                            literal
            statement
              callStatement
                callExpression
                  expressionList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression2
                            expression2
                              expression3
                                literal
                            op2
                            expression3
                              literal
                          op2
                          expression3
                            literal
            statement
              callStatement
                callExpression
                  expressionList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression1
                          expression2
                            expression3
                              literal
                        op1
                        expression2
                          expression2
                            expression3
                              literal
                          op2
                          expression3
                            literal
            statement
              callStatement
                callExpression
                  expressionList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression2
                            expression3
                              expression0
                                expression1
                                  expression1
                                    expression2
                                      expression3
                                        literal
                                  op1
                                  expression2
                                    expression3
                                      literal
                          op2
                          expression3
                            literal
            statement
              callStatement
                callExpression
                  expressionList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression1
                          expression1
                            expression2
                              expression3
                                literal
                          op1
                          expression2
                            expression3
                              literal
                        op1
                        expression2
                          expression3
                            literal
            statement
              callStatement
                callExpression
                  expressionList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression1
                          expression2
                            expression2
                              expression3
                                literal
                            op2
                            expression3
                              literal
                        op1
                        expression2
                          expression2
                            expression3
                              literal
                          op2
                          expression3
                            literal
            statement
              callStatement
                callExpression
                  expressionList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression1
                          expression1
                            expression2
                              expression3
                                literal
                          op1
                          expression2
                            expression3
                              literal
                        op1
                        expression2
                          expression3
                            literal
            statement
              callStatement
                callExpression
                  expressionList> but was: <line 4:12 mismatched input '*' expecting {'Add', 'Subtract', 'OR'}
line 4:14 mismatched input '+' expecting {'LessThan', 'GreaterThan', 'LessThanEqual', 'GreaterThanEqual', 'NotEqual', 'Equal', ')', ','}
line 6:12 mismatched input '+' expecting {'Add', 'Subtract', 'OR'}
line 6:14 mismatched input '*' expecting {'LessThan', 'GreaterThan', 'LessThanEqual', 'GreaterThanEqual', 'NotEqual', 'Equal', ')', ','}
line 8:12 mismatched input '+' expecting {'Add', 'Subtract', 'OR'}
line 8:14 mismatched input '-' expecting {'LessThan', 'GreaterThan', 'LessThanEqual', 'GreaterThanEqual', 'NotEqual', 'Equal', ')', ','}
line 10:12 mismatched input '-' expecting {'Add', 'Subtract', 'OR'}
line 10:14 mismatched input '+' expecting {'LessThan', 'GreaterThan', 'LessThanEqual', 'GreaterThanEqual', 'NotEqual', 'Equal', ')', ','}
line 12:12 mismatched input '/' expecting {'Add', 'Subtract', 'OR'}
line 12:14 mismatched input '+' expecting {'LessThan', 'GreaterThan', 'LessThanEqual', 'GreaterThanEqual', 'NotEqual', 'Equal', ')', ','}
line 14:12 mismatched input '/' expecting {'Add', 'Subtract', 'OR'}
line 14:14 mismatched input '*' expecting {'LessThan', 'GreaterThan', 'LessThanEqual', 'GreaterThanEqual', 'NotEqual', 'Equal', ')', ','}
line 16:12 mismatched input '+' expecting {'Add', 'Subtract', 'OR'}
line 16:14 mismatched input '/' expecting {'LessThan', 'GreaterThan', 'LessThanEqual', 'GreaterThanEqual', 'NotEqual', 'Equal', ')', ','}
line 18:13 mismatched input '+' expecting {'Add', 'Subtract', 'OR'}
line 18:16 mismatched input '*' expecting {'LessThan', 'GreaterThan', 'LessThanEqual', 'GreaterThanEqual', 'NotEqual', 'Equal', ')'}
line 20:12 mismatched input '-' expecting {'Add', 'Subtract', 'OR'}
line 20:14 mismatched input '+' expecting {'LessThan', 'GreaterThan', 'LessThanEqual', 'GreaterThanEqual', 'NotEqual', 'Equal', ')', ','}
line 22:12 mismatched input '*' expecting {'Add', 'Subtract', 'OR'}
line 22:14 mismatched input '+' expecting {'LessThan', 'GreaterThan', 'LessThanEqual', 'GreaterThanEqual', 'NotEqual', 'Equal', ')', ','}
line 24:12 mismatched input '-' expecting {'Add', 'Subtract', 'OR'}
line 24:14 mismatched input '+' expecting {'LessThan', 'GreaterThan', 'LessThanEqual', 'GreaterThanEqual', 'NotEqual', 'Equal', ')', ','}>
	at crux.CompilerStageTests.lambda$parseTree$1(CompilerStageTests.java:88)
]]></failure>
  </testcase>
  <testcase name="parseTree" classname="crux.CompilerStageTests" time="0.006">
    <failure type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
Parse tree for program crux/stages/parse-tree/test35.crx differs from expected output. ==> expected: <program
  declarationList
    declaration
      functionDefinition
        type
        parameterList
        statementBlock
          statementList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            literal
    declaration
      functionDefinition
        type
        parameterList
          parameter
            type
        statementBlock
          statementList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            designator
    declaration
      functionDefinition
        type
        parameterList
          parameter
            type
          parameter
            type
        statementBlock
          statementList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            designator
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            designator
    declaration
      functionDefinition
        type
        parameterList
          parameter
            type
          parameter
            type
          parameter
            type
        statementBlock
          statementList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            designator
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            designator
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            designator
    declaration
      functionDefinition
        type
        parameterList
        statementBlock
          statementList
            statement
              callStatement
                callExpression
                  expressionList
            statement
              callStatement
                callExpression
                  expressionList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            literal
            statement
              callStatement
                callExpression
                  expressionList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            literal
                    expression0
                      expression1
                        expression2
                          expression3
                            literal
            statement
              callStatement
                callExpression
                  expressionList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            literal
                    expression0
                      expression1
                        expression2
                          expression3
                            literal
                    expression0
                      expression1
                        expression2
                          expression3
                            literal
            statement
              callStatement
                callExpression
                  expressionList> but was: <line 4:12 mismatched input ')' expecting {'Add', 'Subtract', 'OR'}
line 8:12 mismatched input ')' expecting {'Add', 'Subtract', 'OR', '['}
line 12:12 mismatched input ')' expecting {'Add', 'Subtract', 'OR', '['}
line 13:12 mismatched input ')' expecting {'Add', 'Subtract', 'OR', '['}
line 17:12 mismatched input ')' expecting {'Add', 'Subtract', 'OR', '['}
line 18:12 mismatched input ')' expecting {'Add', 'Subtract', 'OR', '['}
line 19:12 mismatched input ')' expecting {'Add', 'Subtract', 'OR', '['}
line 25:14 mismatched input ')' expecting {'Add', 'Subtract', 'OR'}
line 27:14 mismatched input ',' expecting {'Add', 'Subtract', 'OR'}
line 27:16 mismatched input ')' expecting {'Add', 'Subtract', 'OR'}
line 29:16 mismatched input ',' expecting {'Add', 'Subtract', 'OR'}
line 29:18 mismatched input ',' expecting {'Add', 'Subtract', 'OR'}
line 29:20 mismatched input ')' expecting {'Add', 'Subtract', 'OR'}>
	at crux.CompilerStageTests.lambda$parseTree$1(CompilerStageTests.java:88)
]]></failure>
  </testcase>
  <testcase name="parseTree" classname="crux.CompilerStageTests" time="0.005">
    <failure type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
Parse tree for program crux/stages/parse-tree/test36.crx differs from expected output. ==> expected: <program
  declarationList
    declaration
      functionDefinition
        type
        parameterList
        statementBlock
          statementList
            statement
              variableDeclaration
                type
            statement
              forStatement
                assignmentStatement
                  designator
                  expression0
                    expression1
                      expression2
                        expression3
                          literal
                expression0
                  expression1
                    expression2
                      expression3
                        designator
                  op0
                  expression1
                    expression2
                      expression3
                        literal
                assignmentStatementNoSemi
                  designator
                  expression0
                    expression1
                      expression1
                        expression2
                          expression3
                            designator
                      op1
                      expression2
                        expression3
                          literal
                statementBlock
                  statementList
                    statement
                      callStatement
                        callExpression
                          expressionList
                            expression0
                              expression1
                                expression2
                                  expression3
                                    callExpression
                                      expressionList> but was: <line 5:10 mismatched input ';' expecting {'Add', 'Subtract', 'OR'}
line 5:14 mismatched input '<' expecting {'Add', 'Subtract', 'OR', '['}
line 5:25 mismatched input '+' expecting {'Add', 'Subtract', 'OR', '['}
line 6:24 mismatched input ')' expecting {'Mult', 'Div', 'AND', Integer, 'true', 'false', '!', Identifier, '(', ')'}>
	at crux.CompilerStageTests.lambda$parseTree$1(CompilerStageTests.java:88)
]]></failure>
  </testcase>
  <testcase name="parseTree" classname="crux.CompilerStageTests" time="0.008">
    <failure type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
Parse tree for program crux/stages/parse-tree/test37.crx differs from expected output. ==> expected: <program
  declarationList
    declaration
      arrayDeclaration
        type
    declaration
      arrayDeclaration
        type
    declaration
      functionDefinition
        type
        parameterList
        statementBlock
          statementList
            statement
              assignmentStatement
                designator
                  expression0
                    expression1
                      expression2
                        expression3
                          literal
                expression0
                  expression1
                    expression2
                      expression3
                        literal
            statement
              assignmentStatement
                designator
                  expression0
                    expression1
                      expression2
                        expression3
                          literal
                expression0
                  expression1
                    expression2
                      expression3
                        literal
            statement
              assignmentStatement
                designator
                  expression0
                    expression1
                      expression2
                        expression3
                          literal
                expression0
                  expression1
                    expression2
                      expression3
                        literal
            statement
              assignmentStatement
                designator
                  expression0
                    expression1
                      expression2
                        expression3
                          literal
                expression0
                  expression1
                    expression2
                      expression3
                        literal
            statement
              assignmentStatement
                designator
                  expression0
                    expression1
                      expression2
                        expression3
                          literal
                expression0
                  expression1
                    expression2
                      expression3
                        literal
            statement
              assignmentStatement
                designator
                  expression0
                    expression1
                      expression2
                        expression3
                          literal
                expression0
                  expression1
                    expression2
                      expression3
                        literal
            statement
              assignmentStatement
                designator
                  expression0
                    expression1
                      expression2
                        expression3
                          literal
                expression0
                  expression1
                    expression2
                      expression3
                        literal
            statement
              assignmentStatement
                designator
                  expression0
                    expression1
                      expression2
                        expression3
                          literal
                expression0
                  expression1
                    expression2
                      expression3
                        literal
            statement
              assignmentStatement
                designator
                  expression0
                    expression1
                      expression2
                        expression3
                          literal
                expression0
                  expression1
                    expression2
                      expression3
                        literal
            statement
              assignmentStatement
                designator
                  expression0
                    expression1
                      expression2
                        expression3
                          designator
                            expression0
                              expression1
                                expression2
                                  expression3
                                    literal
                expression0
                  expression1
                    expression2
                      expression3
                        designator
                          expression0
                            expression1
                              expression2
                                expression3
                                  designator
                                    expression0
                                      expression1
                                        expression2
                                          expression3
                                            literal
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            designator
                              expression0
                                expression1
                                  expression2
                                    expression3
                                      literal> but was: <line 7:5 no viable alternative at input 'x[0]'
line 17:14 mismatched input ']' expecting {'Add', 'Subtract', 'OR'}
line 17:15 mismatched input ')' expecting {'Add', 'Subtract', 'OR'}>
	at crux.CompilerStageTests.lambda$parseTree$1(CompilerStageTests.java:88)
]]></failure>
  </testcase>
  <testcase name="parseTree" classname="crux.CompilerStageTests" time="0.014">
    <failure type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
Parse tree for program crux/stages/parse-tree/test38.crx differs from expected output. ==> expected: <program
  declarationList
    declaration
      functionDefinition
        type
        parameterList
        statementBlock
          statementList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression2
                            expression3
                              expression0
                                expression1
                                  expression2
                                    expression3
                                      literal
                                op0
                                expression1
                                  expression2
                                    expression3
                                      literal
                          op2
                          expression3
                            expression0
                              expression1
                                expression2
                                  expression3
                                    literal
                              op0
                              expression1
                                expression2
                                  expression3
                                    literal
            statement
              callStatement
                callExpression
                  expressionList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression1
                          expression2
                            expression2
                              expression3
                                expression0
                                  expression1
                                    expression2
                                      expression3
                                        literal
                                  op0
                                  expression1
                                    expression2
                                      expression3
                                        literal
                            op2
                            expression3
                              expression0
                                expression1
                                  expression2
                                    expression3
                                      literal
                                op0
                                expression1
                                  expression2
                                    expression3
                                      literal
                        op1
                        expression2
                          expression3
                            expression0
                              expression1
                                expression2
                                  expression3
                                    literal
                              op0
                              expression1
                                expression2
                                  expression3
                                    literal
            statement
              callStatement
                callExpression
                  expressionList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression2
                            expression3
                              expression0
                                expression1
                                  expression1
                                    expression2
                                      expression3
                                        literal
                                  op1
                                  expression2
                                    expression3
                                      literal
                                op0
                                expression1
                                  expression2
                                    expression3
                                      literal
                          op2
                          expression3
                            expression0
                              expression1
                                expression2
                                  expression3
                                    literal
                              op0
                              expression1
                                expression2
                                  expression3
                                    literal
            statement
              callStatement
                callExpression
                  expressionList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression1
                          expression2
                            expression2
                              expression3
                                literal
                            op2
                            expression3
                              literal
                        op1
                        expression2
                          expression3
                            literal
            statement
              callStatement
                callExpression
                  expressionList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression1
                          expression2
                            expression2
                              expression3
                                literal
                            op2
                            expression3
                              literal
                        op1
                        expression2
                          expression3
                            literal
            statement
              callStatement
                callExpression
                  expressionList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression1
                          expression2
                            expression2
                              expression3
                                literal
                            op2
                            expression3
                              literal
                        op1
                        expression2
                          expression3
                            literal
            statement
              callStatement
                callExpression
                  expressionList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression1
                          expression2
                            expression2
                              expression3
                                literal
                            op2
                            expression3
                              literal
                        op1
                        expression2
                          expression3
                            literal
            statement
              callStatement
                callExpression
                  expressionList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression1
                          expression2
                            expression2
                              expression3
                                literal
                            op2
                            expression3
                              literal
                        op1
                        expression2
                          expression3
                            literal
            statement
              callStatement
                callExpression
                  expressionList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression1
                          expression2
                            expression2
                              expression3
                                literal
                            op2
                            expression3
                              literal
                        op1
                        expression2
                          expression3
                            literal
            statement
              callStatement
                callExpression
                  expressionList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression1
                          expression2
                            expression2
                              expression3
                                literal
                            op2
                            expression3
                              literal
                        op1
                        expression2
                          expression3
                            literal
            statement
              callStatement
                callExpression
                  expressionList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression1
                          expression2
                            expression2
                              expression3
                                literal
                            op2
                            expression3
                              literal
                        op1
                        expression2
                          expression3
                            literal
            statement
              callStatement
                callExpression
                  expressionList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression1
                          expression2
                            expression3
                              literal
                        op1
                        expression2
                          expression2
                            expression3
                              literal
                          op2
                          expression3
                            literal
            statement
              callStatement
                callExpression
                  expressionList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression1
                          expression2
                            expression3
                              literal
                        op1
                        expression2
                          expression2
                            expression3
                              literal
                          op2
                          expression3
                            literal
            statement
              callStatement
                callExpression
                  expressionList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression1
                          expression2
                            expression3
                              literal
                        op1
                        expression2
                          expression2
                            expression3
                              literal
                          op2
                          expression3
                            literal
            statement
              callStatement
                callExpression
                  expressionList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression1
                          expression2
                            expression3
                              literal
                        op1
                        expression2
                          expression2
                            expression3
                              literal
                          op2
                          expression3
                            literal
            statement
              callStatement
                callExpression
                  expressionList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression1
                          expression2
                            expression3
                              literal
                        op1
                        expression2
                          expression2
                            expression3
                              literal
                          op2
                          expression3
                            literal
            statement
              callStatement
                callExpression
                  expressionList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression1
                          expression2
                            expression3
                              literal
                        op1
                        expression2
                          expression2
                            expression3
                              literal
                          op2
                          expression3
                            literal
            statement
              callStatement
                callExpression
                  expressionList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression1
                          expression2
                            expression3
                              literal
                        op1
                        expression2
                          expression2
                            expression3
                              literal
                          op2
                          expression3
                            literal
            statement
              callStatement
                callExpression
                  expressionList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression1
                          expression2
                            expression3
                              literal
                        op1
                        expression2
                          expression2
                            expression3
                              literal
                          op2
                          expression3
                            literal
            statement
              callStatement
                callExpression
                  expressionList> but was: <line 4:14 mismatched input '<' expecting {'Add', 'Subtract', 'OR'}
line 4:18 mismatched input '&&' expecting {'LessThan', 'GreaterThan', 'LessThanEqual', 'GreaterThanEqual', 'NotEqual', 'Equal', ')'}
line 4:23 mismatched input '>' expecting {'Add', 'Subtract', 'OR'}
line 6:14 mismatched input '<' expecting {'Add', 'Subtract', 'OR'}
line 6:18 mismatched input '&&' expecting {'LessThan', 'GreaterThan', 'LessThanEqual', 'GreaterThanEqual', 'NotEqual', 'Equal', ')'}
line 6:23 mismatched input '<' expecting {'Add', 'Subtract', 'OR'}
line 6:27 mismatched input '||' expecting {'LessThan', 'GreaterThan', 'LessThanEqual', 'GreaterThanEqual', 'NotEqual', 'Equal', ')'}
line 8:14 mismatched input '+' expecting {'Add', 'Subtract', 'OR'}
line 8:16 mismatched input '<' expecting {'LessThan', 'GreaterThan', 'LessThanEqual', 'GreaterThanEqual', 'NotEqual', 'Equal', ')'}
line 8:20 mismatched input '&&' expecting {'LessThan', 'GreaterThan', 'LessThanEqual', 'GreaterThanEqual', 'NotEqual', 'Equal', ')'}
line 10:18 mismatched input '&&' expecting {'Add', 'Subtract', 'OR'}
line 10:27 mismatched input '||' expecting {'LessThan', 'GreaterThan', 'LessThanEqual', 'GreaterThanEqual', 'NotEqual', 'Equal', ')', ','}
line 12:18 mismatched input '&&' expecting {'Add', 'Subtract', 'OR'}
line 12:27 mismatched input '||' expecting {'LessThan', 'GreaterThan', 'LessThanEqual', 'GreaterThanEqual', 'NotEqual', 'Equal', ')', ','}
line 14:18 mismatched input '&&' expecting {'Add', 'Subtract', 'OR'}
line 14:26 mismatched input '||' expecting {'LessThan', 'GreaterThan', 'LessThanEqual', 'GreaterThanEqual', 'NotEqual', 'Equal', ')', ','}
line 16:18 mismatched input '&&' expecting {'Add', 'Subtract', 'OR'}
line 16:26 mismatched input '||' expecting {'LessThan', 'GreaterThan', 'LessThanEqual', 'GreaterThanEqual', 'NotEqual', 'Equal', ')', ','}
line 18:17 mismatched input '&&' expecting {'Add', 'Subtract', 'OR'}
line 18:26 mismatched input '||' expecting {'LessThan', 'GreaterThan', 'LessThanEqual', 'GreaterThanEqual', 'NotEqual', 'Equal', ')', ','}
line 20:17 mismatched input '&&' expecting {'Add', 'Subtract', 'OR'}
line 20:26 mismatched input '||' expecting {'LessThan', 'GreaterThan', 'LessThanEqual', 'GreaterThanEqual', 'NotEqual', 'Equal', ')', ','}
line 22:17 mismatched input '&&' expecting {'Add', 'Subtract', 'OR'}
line 22:25 mismatched input '||' expecting {'LessThan', 'GreaterThan', 'LessThanEqual', 'GreaterThanEqual', 'NotEqual', 'Equal', ')', ','}
line 24:17 mismatched input '&&' expecting {'Add', 'Subtract', 'OR'}
line 24:25 mismatched input '||' expecting {'LessThan', 'GreaterThan', 'LessThanEqual', 'GreaterThanEqual', 'NotEqual', 'Equal', ')', ','}
line 26:18 mismatched input '||' expecting {'Add', 'Subtract', 'OR'}
line 26:27 mismatched input '&&' expecting {'LessThan', 'GreaterThan', 'LessThanEqual', 'GreaterThanEqual', 'NotEqual', 'Equal', ')', ','}
line 28:18 mismatched input '||' expecting {'Add', 'Subtract', 'OR'}
line 28:27 mismatched input '&&' expecting {'LessThan', 'GreaterThan', 'LessThanEqual', 'GreaterThanEqual', 'NotEqual', 'Equal', ')', ','}
line 30:18 mismatched input '||' expecting {'Add', 'Subtract', 'OR'}
line 30:26 mismatched input '&&' expecting {'LessThan', 'GreaterThan', 'LessThanEqual', 'GreaterThanEqual', 'NotEqual', 'Equal', ')', ','}
line 32:18 mismatched input '||' expecting {'Add', 'Subtract', 'OR'}
line 32:26 mismatched input '&&' expecting {'LessThan', 'GreaterThan', 'LessThanEqual', 'GreaterThanEqual', 'NotEqual', 'Equal', ')', ','}
line 34:17 mismatched input '||' expecting {'Add', 'Subtract', 'OR'}
line 34:26 mismatched input '&&' expecting {'LessThan', 'GreaterThan', 'LessThanEqual', 'GreaterThanEqual', 'NotEqual', 'Equal', ')', ','}
line 36:17 mismatched input '||' expecting {'Add', 'Subtract', 'OR'}
line 36:26 mismatched input '&&' expecting {'LessThan', 'GreaterThan', 'LessThanEqual', 'GreaterThanEqual', 'NotEqual', 'Equal', ')', ','}
line 38:17 mismatched input '||' expecting {'Add', 'Subtract', 'OR'}
line 38:25 mismatched input '&&' expecting {'LessThan', 'GreaterThan', 'LessThanEqual', 'GreaterThanEqual', 'NotEqual', 'Equal', ')', ','}
line 40:17 mismatched input '||' expecting {'Add', 'Subtract', 'OR'}
line 40:25 mismatched input '&&' expecting {'LessThan', 'GreaterThan', 'LessThanEqual', 'GreaterThanEqual', 'NotEqual', 'Equal', ')', ','}>
	at crux.CompilerStageTests.lambda$parseTree$1(CompilerStageTests.java:88)
]]></failure>
  </testcase>
  <testcase name="parseTree" classname="crux.CompilerStageTests" time="0.011">
    <failure type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
Parse tree for program crux/stages/parse-tree/test39.crx differs from expected output. ==> expected: <program
  declarationList
    declaration
      functionDefinition
        type
        parameterList
          parameter
            type
          parameter
            type
        statementBlock
          statementList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression1
                          expression2
                            expression3
                              designator
                        op1
                        expression2
                          expression3
                            designator
            statement
              callStatement
                callExpression
                  expressionList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression1
                          expression2
                            expression3
                              designator
                        op1
                        expression2
                          expression3
                            designator
            statement
              callStatement
                callExpression
                  expressionList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression2
                            expression3
                              designator
                          op2
                          expression3
                            designator
            statement
              callStatement
                callExpression
                  expressionList
            statement
              ifStatement
                expression0
                  expression1
                    expression2
                      expression3
                        expression0
                          expression1
                            expression2
                              expression3
                                designator
                          op0
                          expression1
                            expression2
                              expression3
                                literal
                statementBlock
                  statementList
                    statement
                      callStatement
                        callExpression
                          expressionList
                            expression0
                              expression1
                                expression2
                                  expression2
                                    expression3
                                      designator
                                  op2
                                  expression3
                                    designator
                    statement
                      callStatement
                        callExpression
                          expressionList
                statementBlock
                  statementList
                    statement
                      callStatement
                        callExpression
                          expressionList
    declaration
      functionDefinition
        type
        parameterList
        statementBlock
          statementList
            statement
              variableDeclaration
                type
            statement
              variableDeclaration
                type
            statement
              forStatement
                assignmentStatement
                  designator
                  expression0
                    expression1
                      expression2
                        expression3
                          literal
                expression0
                  expression1
                    expression2
                      expression3
                        designator
                  op0
                  expression1
                    expression2
                      expression3
                        literal
                assignmentStatementNoSemi
                  designator
                  expression0
                    expression1
                      expression1
                        expression2
                          expression3
                            designator
                      op1
                      expression2
                        expression3
                          literal
                statementBlock
                  statementList
                    statement
                      forStatement
                        assignmentStatement
                          designator
                          expression0
                            expression1
                              expression2
                                expression3
                                  literal
                        expression0
                          expression1
                            expression2
                              expression3
                                designator
                          op0
                          expression1
                            expression2
                              expression3
                                literal
                        assignmentStatementNoSemi
                          designator
                          expression0
                            expression1
                              expression1
                                expression2
                                  expression3
                                    designator
                              op1
                              expression2
                                expression3
                                  literal
                        statementBlock
                          statementList
                            statement
                              callStatement
                                callExpression
                                  expressionList
                                    expression0
                                      expression1
                                        expression2
                                          expression3
                                            designator
                                    expression0
                                      expression1
                                        expression2
                                          expression3
                                            designator> but was: <line 4:13 mismatched input '+' expecting {'Add', 'Subtract', 'OR', '['}
line 6:13 mismatched input '-' expecting {'Add', 'Subtract', 'OR', '['}
line 8:13 mismatched input '*' expecting {'Add', 'Subtract', 'OR', '['}
line 10:8 mismatched input '!=' expecting {'Add', 'Subtract', 'OR', '['}
line 10:14 mismatched input '{' expecting {'Add', 'Subtract', 'OR', '['}
line 11:15 mismatched input '/' expecting {'Add', 'Subtract', 'OR', '['}
line 21:11 mismatched input ';' expecting {'Add', 'Subtract', 'OR'}
line 21:15 mismatched input '<=' expecting {'Add', 'Subtract', 'OR', '['}
line 21:28 mismatched input '+' expecting {'Add', 'Subtract', 'OR', '['}
line 22:13 mismatched input ';' expecting {'Add', 'Subtract', 'OR'}
line 22:17 mismatched input '<=' expecting {'Add', 'Subtract', 'OR', '['}
line 22:30 mismatched input '+' expecting {'Add', 'Subtract', 'OR', '['}
line 23:13 mismatched input ',' expecting {'Add', 'Subtract', 'OR', '['}
line 23:16 mismatched input ')' expecting {'Add', 'Subtract', 'OR', '['}>
	at crux.CompilerStageTests.lambda$parseTree$1(CompilerStageTests.java:88)
]]></failure>
  </testcase>
  <testcase name="parseTree" classname="crux.CompilerStageTests" time="0.009">
    <failure type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
Parse tree for program crux/stages/parse-tree/test40.crx differs from expected output. ==> expected: <program
  declarationList
    declaration
      functionDefinition
        type
        parameterList
          parameter
            type
          parameter
            type
        statementBlock
          statementList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            designator
                      op0
                      expression1
                        expression2
                          expression3
                            designator
            statement
              callStatement
                callExpression
                  expressionList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            designator
                      op0
                      expression1
                        expression2
                          expression3
                            designator
            statement
              callStatement
                callExpression
                  expressionList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            designator
                      op0
                      expression1
                        expression2
                          expression3
                            designator
            statement
              callStatement
                callExpression
                  expressionList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            designator
                      op0
                      expression1
                        expression2
                          expression3
                            designator
            statement
              callStatement
                callExpression
                  expressionList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            designator
                      op0
                      expression1
                        expression2
                          expression3
                            designator
            statement
              callStatement
                callExpression
                  expressionList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            designator
                      op0
                      expression1
                        expression2
                          expression3
                            designator
            statement
              callStatement
                callExpression
                  expressionList
    declaration
      functionDefinition
        type
        parameterList
        statementBlock
          statementList
            statement
              variableDeclaration
                type
            statement
              variableDeclaration
                type
            statement
              forStatement
                assignmentStatement
                  designator
                  expression0
                    expression1
                      expression2
                        expression3
                          literal
                expression0
                  expression1
                    expression2
                      expression3
                        designator
                  op0
                  expression1
                    expression2
                      expression3
                        literal
                assignmentStatementNoSemi
                  designator
                  expression0
                    expression1
                      expression1
                        expression2
                          expression3
                            designator
                      op1
                      expression2
                        expression3
                          literal
                statementBlock
                  statementList
                    statement
                      forStatement
                        assignmentStatement
                          designator
                          expression0
                            expression1
                              expression2
                                expression3
                                  literal
                        expression0
                          expression1
                            expression2
                              expression3
                                designator
                          op0
                          expression1
                            expression2
                              expression3
                                literal
                        assignmentStatementNoSemi
                          designator
                          expression0
                            expression1
                              expression1
                                expression2
                                  expression3
                                    designator
                              op1
                              expression2
                                expression3
                                  literal
                        statementBlock
                          statementList
                            statement
                              callStatement
                                callExpression
                                  expressionList
                                    expression0
                                      expression1
                                        expression2
                                          expression3
                                            designator
                                    expression0
                                      expression1
                                        expression2
                                          expression3
                                            designator> but was: <line 4:14 mismatched input '>=' expecting {'Add', 'Subtract', 'OR', '['}
line 6:14 mismatched input '<=' expecting {'Add', 'Subtract', 'OR', '['}
line 8:14 mismatched input '!=' expecting {'Add', 'Subtract', 'OR', '['}
line 10:14 mismatched input '==' expecting {'Add', 'Subtract', 'OR', '['}
line 12:14 mismatched input '<' expecting {'Add', 'Subtract', 'OR', '['}
line 14:14 mismatched input '>' expecting {'Add', 'Subtract', 'OR', '['}
line 21:11 mismatched input ';' expecting {'Add', 'Subtract', 'OR'}
line 21:15 mismatched input '<=' expecting {'Add', 'Subtract', 'OR', '['}
line 21:27 mismatched input '+' expecting {'Add', 'Subtract', 'OR', '['}
line 22:12 mismatched input ';' expecting {'Add', 'Subtract', 'OR'}
line 22:16 mismatched input '<=' expecting {'Add', 'Subtract', 'OR', '['}
line 22:28 mismatched input '+' expecting {'Add', 'Subtract', 'OR', '['}
line 23:13 mismatched input ',' expecting {'Add', 'Subtract', 'OR', '['}
line 23:16 mismatched input ')' expecting {'Add', 'Subtract', 'OR', '['}>
	at crux.CompilerStageTests.lambda$parseTree$1(CompilerStageTests.java:88)
]]></failure>
  </testcase>
  <testcase name="parseTree" classname="crux.CompilerStageTests" time="0.01">
    <failure type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
Parse tree for program crux/stages/parse-tree/test41.crx differs from expected output. ==> expected: <program
  declarationList
    declaration
      variableDeclaration
        type
    declaration
      arrayDeclaration
        type
    declaration
      functionDefinition
        type
        parameterList
        statementBlock
          statementList
            statement
              returnStatement
                expression0
                  expression1
                    expression2
                      expression3
                        literal
    declaration
      functionDefinition
        type
        parameterList
        statementBlock
          statementList
            statement
              assignmentStatement
                designator
                expression0
                  expression1
                    expression2
                      expression3
                        literal
            statement
              assignmentStatement
                designator
                  expression0
                    expression1
                      expression2
                        expression3
                          literal
                expression0
                  expression1
                    expression2
                      expression3
                        literal
            statement
              variableDeclaration
                type
            statement
              ifStatement
                expression0
                  expression1
                    expression2
                      expression3
                        expression0
                          expression1
                            expression2
                              expression3
                                expression0
                                  expression1
                                    expression2
                                      expression3
                                        expression0
                                          expression1
                                            expression2
                                              expression3
                                                expression0
                                                  expression1
                                                    expression2
                                                      expression3
                                                        expression0
                                                          expression1
                                                            expression2
                                                              expression3
                                                                literal
                statementBlock
                  statementList
                    statement
                      assignmentStatement
                        designator
                        expression0
                          expression1
                            expression1
                              expression2
                                expression3
                                  expression0
                                    expression1
                                      expression2
                                        expression3
                                          literal
                                    op0
                                    expression1
                                      expression2
                                        expression3
                                          expression0
                                            expression1
                                              expression1
                                                expression2
                                                  expression3
                                                    designator
                                                      expression0
                                                        expression1
                                                          expression2
                                                            expression3
                                                              literal
                                              op1
                                              expression2
                                                expression3
                                                  designator
                            op1
                            expression2
                              expression3
                                expression0
                                  expression1
                                    expression1
                                      expression2
                                        expression3
                                          callExpression
                                            expressionList
                                    op1
                                    expression2
                                      expression3
                                        expression0
                                          expression1
                                            expression2
                                              expression3
                                                expression0
                                                  expression1
                                                    expression2
                                                      expression3
                                                        expression0
                                                          expression1
                                                            expression2
                                                              expression3
                                                                literal> but was: <line 8:14 mismatched input ';' expecting {'Add', 'Subtract', 'OR'}
line 13:7 no viable alternative at input 'a=0;'
line 16:14 mismatched input ')' expecting {'Add', 'Subtract', 'OR'}
line 16:15 mismatched input ')' expecting {'Add', 'Subtract', 'OR'}
line 16:16 mismatched input ')' expecting {'Add', 'Subtract', 'OR'}
line 16:17 mismatched input ')' expecting {'Add', 'Subtract', 'OR'}
line 16:18 mismatched input ')' expecting {'Add', 'Subtract', 'OR'}
line 16:20 mismatched input '{' expecting {'Add', 'Subtract', 'OR'}
line 17:12 no viable alternative at input 'c=(1>'
line 17:36 mismatched input '||' expecting {'Mult', 'Div', 'AND', Integer, 'true', 'false', '!', Identifier, '(', ')'}>
	at crux.CompilerStageTests.lambda$parseTree$1(CompilerStageTests.java:88)
]]></failure>
  </testcase>
  <testcase name="parseTree" classname="crux.CompilerStageTests" time="0.004">
    <failure type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
Parse tree for program crux/stages/parse-tree/test42.crx differs from expected output. ==> expected: <program
  declarationList
    declaration
      arrayDeclaration
        type
    declaration
      functionDefinition
        type
        parameterList
        statementBlock
          statementList
            statement
              assignmentStatement
                designator
                  expression0
                    expression1
                      expression2
                        expression3
                          literal
                expression0
                  expression1
                    expression2
                      expression3
                        literal
            statement
              returnStatement
                expression0
                  expression1
                    expression2
                      expression3
                        literal
    declaration
      functionDefinition
        type
        parameterList
        statementBlock
          statementList
            statement
              assignmentStatement
                designator
                  expression0
                    expression1
                      expression2
                        expression3
                          literal
                expression0
                  expression1
                    expression2
                      expression3
                        literal
            statement
              assignmentStatement
                designator
                  expression0
                    expression1
                      expression2
                        expression3
                          literal
                expression0
                  expression1
                    expression2
                      expression3
                        literal
            statement
              assignmentStatement
                designator
                  expression0
                    expression1
                      expression2
                        expression3
                          literal
                expression0
                  expression1
                    expression2
                      expression3
                        literal
            statement
              assignmentStatement
                designator
                  expression0
                    expression1
                      expression2
                        expression3
                          designator
                            expression0
                              expression1
                                expression2
                                  expression3
                                    literal
                expression0
                  expression1
                    expression1
                      expression2
                        expression3
                          designator
                            expression0
                              expression1
                                expression2
                                  expression3
                                    literal
                    op1
                    expression2
                      expression3
                        callExpression
                          expressionList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            designator
                              expression0
                                expression1
                                  expression2
                                    expression3
                                      literal
            statement
              callStatement
                callExpression
                  expressionList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            designator
                              expression0
                                expression1
                                  expression2
                                    expression3
                                      literal
            statement
              callStatement
                callExpression
                  expressionList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            designator
                              expression0
                                expression1
                                  expression2
                                    expression3
                                      literal
            statement
              callStatement
                callExpression
                  expressionList> but was: <line 6:8 no viable alternative at input 'a[1]'
line 7:13 mismatched input ';' expecting {'Add', 'Subtract', 'OR'}
line 11:5 no viable alternative at input 'a[0]'
line 15:14 mismatched input ']' expecting {'Add', 'Subtract', 'OR'}
line 15:15 mismatched input ')' expecting {'Add', 'Subtract', 'OR'}
line 17:14 mismatched input ']' expecting {'Add', 'Subtract', 'OR'}
line 17:15 mismatched input ')' expecting {'Add', 'Subtract', 'OR'}
line 19:14 mismatched input ']' expecting {'Add', 'Subtract', 'OR'}
line 19:15 mismatched input ')' expecting {'Add', 'Subtract', 'OR'}>
	at crux.CompilerStageTests.lambda$parseTree$1(CompilerStageTests.java:88)
]]></failure>
  </testcase>
  <testcase name="parseTree" classname="crux.CompilerStageTests" time="0.006">
    <failure type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
Parse tree for program crux/stages/parse-tree/test43.crx differs from expected output. ==> expected: <program
  declarationList
    declaration
      functionDefinition
        type
        parameterList
          parameter
            type
        statementBlock
          statementList
            statement
              ifStatement
                expression0
                  expression1
                    expression2
                      expression3
                        expression0
                          expression1
                            expression2
                              expression3
                                literal
                statementBlock
                  statementList
                    statement
                      ifStatement
                        expression0
                          expression1
                            expression2
                              expression3
                                expression0
                                  expression1
                                    expression2
                                      expression3
                                        literal
                        statementBlock
                          statementList
                            statement
                              assignmentStatement
                                designator
                                expression0
                                  expression1
                                    expression2
                                      expression3
                                        literal
                        statementBlock
                          statementList
                            statement
                              variableDeclaration
                                type
                            statement
                              forStatement
                                assignmentStatement
                                  designator
                                  expression0
                                    expression1
                                      expression2
                                        expression3
                                          literal
                                expression0
                                  expression1
                                    expression2
                                      expression3
                                        designator
                                  op0
                                  expression1
                                    expression2
                                      expression3
                                        literal
                                assignmentStatementNoSemi
                                  designator
                                  expression0
                                    expression1
                                      expression1
                                        expression2
                                          expression3
                                            designator
                                      op1
                                      expression2
                                        expression3
                                          literal
                                statementBlock
                                  statementList
                                    statement
                                      returnStatement
                                        expression0
                                          expression1
                                            expression2
                                              expression3
                                                designator
                    statement
                      returnStatement
                        expression0
                          expression1
                            expression2
                              expression3
                                literal
                statementBlock
                  statementList
                    statement
                      returnStatement
                        expression0
                          expression1
                            expression2
                              expression3
                                designator
    declaration
      functionDefinition
        type
        parameterList
        statementBlock
          statementList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            literal
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            callExpression
                              expressionList
                                expression0
                                  expression1
                                    expression2
                                      expression3
                                        literal> but was: <line 4:10 mismatched input ')' expecting {'Add', 'Subtract', 'OR'}
line 4:12 mismatched input '{' expecting {'Add', 'Subtract', 'OR'}
line 5:13 mismatched input ')' expecting {'Add', 'Subtract', 'OR'}
line 5:15 mismatched input '{' expecting {'Add', 'Subtract', 'OR'}
line 6:11 no viable alternative at input 'a=3;'
line 9:15 mismatched input ';' expecting {'Add', 'Subtract', 'OR'}
line 9:19 mismatched input '<' expecting {'Add', 'Subtract', 'OR', '['}
line 9:31 mismatched input '+' expecting {'Add', 'Subtract', 'OR', '['}
line 10:16 mismatched input ';' expecting {'Add', 'Subtract', 'OR', '['}
line 13:12 mismatched input ';' expecting {'Add', 'Subtract', 'OR'}
line 15:12 mismatched input ';' expecting {'Add', 'Subtract', 'OR', '['}
line 20:12 mismatched input ')' expecting {'Add', 'Subtract', 'OR'}
line 21:25 mismatched input ')' expecting {'Add', 'Subtract', 'OR'}
line 21:26 mismatched input ')' expecting {'Add', 'Subtract', 'OR'}>
	at crux.CompilerStageTests.lambda$parseTree$1(CompilerStageTests.java:88)
]]></failure>
  </testcase>
  <testcase name="parseTree" classname="crux.CompilerStageTests" time="0.004">
    <failure type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
Parse tree for program crux/stages/parse-tree/test44.crx differs from expected output. ==> expected: <program
  declarationList
    declaration
      functionDefinition
        type
        parameterList
        statementBlock
          statementList
            statement
              variableDeclaration
                type
            statement
              variableDeclaration
                type
            statement
              forStatement
                assignmentStatement
                  designator
                  expression0
                    expression1
                      expression2
                        expression3
                          literal
                expression0
                  expression1
                    expression2
                      expression3
                        designator
                  op0
                  expression1
                    expression2
                      expression3
                        literal
                assignmentStatementNoSemi
                  designator
                  expression0
                    expression1
                      expression1
                        expression2
                          expression3
                            designator
                      op1
                      expression2
                        expression3
                          literal
                statementBlock
                  statementList
                    statement
                      ifStatement
                        expression0
                          expression1
                            expression2
                              expression3
                                expression0
                                  expression1
                                    expression2
                                      expression3
                                        literal
                        statementBlock
                          statementList
                            statement
                              ifStatement
                                expression0
                                  expression1
                                    expression2
                                      expression3
                                        expression0
                                          expression1
                                            expression2
                                              expression3
                                                literal
                                statementBlock
                                  statementList
                                    statement
                                      forStatement
                                        assignmentStatement
                                          designator
                                          expression0
                                            expression1
                                              expression2
                                                expression3
                                                  literal
                                        expression0
                                          expression1
                                            expression2
                                              expression3
                                                designator
                                          op0
                                          expression1
                                            expression2
                                              expression3
                                                literal
                                        assignmentStatementNoSemi
                                          designator
                                          expression0
                                            expression1
                                              expression1
                                                expression2
                                                  expression3
                                                    designator
                                              op1
                                              expression2
                                                expression3
                                                  literal
                                        statementBlock
                                          statementList
                                            statement
                                              callStatement
                                                callExpression
                                                  expressionList
                                                    expression0
                                                      expression1
                                                        expression2
                                                          expression3
                                                            literal
                                statementBlock
                                  statementList
                                    statement
                                      callStatement
                                        callExpression
                                          expressionList
                                            expression0
                                              expression1
                                                expression2
                                                  expression3
                                                    literal
                    statement
                      callStatement
                        callExpression
                          expressionList
                            expression0
                              expression1
                                expression2
                                  expression3
                                    literal
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            literal> but was: <line 6:11 mismatched input ';' expecting {'Add', 'Subtract', 'OR'}
line 6:15 mismatched input '<' expecting {'Add', 'Subtract', 'OR', '['}
line 6:26 mismatched input '+' expecting {'Add', 'Subtract', 'OR', '['}
line 7:12 mismatched input ')' expecting {'Add', 'Subtract', 'OR'}
line 7:14 mismatched input '{' expecting {'Add', 'Subtract', 'OR'}
line 8:14 mismatched input ')' expecting {'Add', 'Subtract', 'OR'}
line 8:16 mismatched input '{' expecting {'Add', 'Subtract', 'OR'}
line 9:17 mismatched input ';' expecting {'Add', 'Subtract', 'OR'}
line 9:21 mismatched input '<' expecting {'Add', 'Subtract', 'OR', '['}
line 9:32 mismatched input '+' expecting {'Add', 'Subtract', 'OR', '['}
line 10:20 mismatched input ')' expecting {'Add', 'Subtract', 'OR'}
line 13:18 mismatched input ')' expecting {'Add', 'Subtract', 'OR'}
line 16:14 mismatched input ')' expecting {'Add', 'Subtract', 'OR'}
line 18:12 mismatched input ')' expecting {'Add', 'Subtract', 'OR'}>
	at crux.CompilerStageTests.lambda$parseTree$1(CompilerStageTests.java:88)
]]></failure>
  </testcase>
  <testcase name="parseTree" classname="crux.CompilerStageTests" time="0.007">
    <failure type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
Parse tree for program crux/stages/parse-tree/test45.crx differs from expected output. ==> expected: <program
  declarationList
    declaration
      functionDefinition
        type
        parameterList
          parameter
            type
          parameter
            type
          parameter
            type
          parameter
            type
          parameter
            type
          parameter
            type
          parameter
            type
          parameter
            type
          parameter
            type
        statementBlock
          statementList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            designator
            statement
              callStatement
                callExpression
                  expressionList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            designator
            statement
              callStatement
                callExpression
                  expressionList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            designator
            statement
              callStatement
                callExpression
                  expressionList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            designator
            statement
              callStatement
                callExpression
                  expressionList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            designator
            statement
              callStatement
                callExpression
                  expressionList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            designator
            statement
              callStatement
                callExpression
                  expressionList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            designator
            statement
              callStatement
                callExpression
                  expressionList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            designator
            statement
              callStatement
                callExpression
                  expressionList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            designator
            statement
              callStatement
                callExpression
                  expressionList
    declaration
      functionDefinition
        type
        parameterList
        statementBlock
          statementList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            literal
                    expression0
                      expression1
                        expression2
                          expression3
                            literal
                    expression0
                      expression1
                        expression2
                          expression3
                            literal
                    expression0
                      expression1
                        expression2
                          expression3
                            literal
                    expression0
                      expression1
                        expression2
                          expression3
                            literal
                    expression0
                      expression1
                        expression2
                          expression3
                            literal
                    expression0
                      expression1
                        expression2
                          expression3
                            literal
                    expression0
                      expression1
                        expression2
                          expression3
                            literal
                    expression0
                      expression1
                        expression2
                          expression3
                            literal> but was: <line 4:12 mismatched input ')' expecting {'Add', 'Subtract', 'OR', '['}
line 6:12 mismatched input ')' expecting {'Add', 'Subtract', 'OR', '['}
line 8:12 mismatched input ')' expecting {'Add', 'Subtract', 'OR', '['}
line 10:12 mismatched input ')' expecting {'Add', 'Subtract', 'OR', '['}
line 12:12 mismatched input ')' expecting {'Add', 'Subtract', 'OR', '['}
line 14:12 mismatched input ')' expecting {'Add', 'Subtract', 'OR', '['}
line 16:12 mismatched input ')' expecting {'Add', 'Subtract', 'OR', '['}
line 18:12 mismatched input ')' expecting {'Add', 'Subtract', 'OR', '['}
line 20:12 mismatched input ')' expecting {'Add', 'Subtract', 'OR', '['}
line 25:13 mismatched input ',' expecting {'Add', 'Subtract', 'OR'}
line 25:16 mismatched input ',' expecting {'Add', 'Subtract', 'OR'}
line 25:19 mismatched input ',' expecting {'Add', 'Subtract', 'OR'}
line 25:22 mismatched input ',' expecting {'Add', 'Subtract', 'OR'}
line 25:25 mismatched input ',' expecting {'Add', 'Subtract', 'OR'}
line 25:28 mismatched input ',' expecting {'Add', 'Subtract', 'OR'}
line 25:31 mismatched input ',' expecting {'Add', 'Subtract', 'OR'}
line 25:34 mismatched input ',' expecting {'Add', 'Subtract', 'OR'}
line 25:37 mismatched input ')' expecting {'Add', 'Subtract', 'OR'}>
	at crux.CompilerStageTests.lambda$parseTree$1(CompilerStageTests.java:88)
]]></failure>
  </testcase>
  <testcase name="parseTree" classname="crux.CompilerStageTests" time="0.01">
    <failure type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
Parse tree for program crux/stages/parse-tree/test46.crx differs from expected output. ==> expected: <program
  declarationList
    declaration
      arrayDeclaration
        type
    declaration
      functionDefinition
        type
        parameterList
        statementBlock
          statementList
            statement
              variableDeclaration
                type
            statement
              variableDeclaration
                type
            statement
              variableDeclaration
                type
            statement
              variableDeclaration
                type
            statement
              assignmentStatement
                designator
                expression0
                  expression1
                    expression2
                      expression3
                        literal
            statement
              assignmentStatement
                designator
                expression0
                  expression1
                    expression2
                      expression3
                        literal
            statement
              forStatement
                assignmentStatement
                  designator
                  expression0
                    expression1
                      expression2
                        expression3
                          literal
                expression0
                  expression1
                    expression2
                      expression3
                        designator
                  op0
                  expression1
                    expression2
                      expression3
                        literal
                assignmentStatementNoSemi
                  designator
                  expression0
                    expression1
                      expression1
                        expression2
                          expression3
                            designator
                      op1
                      expression2
                        expression3
                          literal
                statementBlock
                  statementList
                    statement
                      forStatement
                        assignmentStatement
                          designator
                          expression0
                            expression1
                              expression2
                                expression3
                                  literal
                        expression0
                          expression1
                            expression2
                              expression3
                                designator
                          op0
                          expression1
                            expression2
                              expression3
                                literal
                        assignmentStatementNoSemi
                          designator
                          expression0
                            expression1
                              expression1
                                expression2
                                  expression3
                                    designator
                              op1
                              expression2
                                expression3
                                  literal
                        statementBlock
                          statementList
                            statement
                              assignmentStatement
                                designator
                                  expression0
                                    expression1
                                      expression2
                                        expression3
                                          designator
                                expression0
                                  expression1
                                    expression1
                                      expression1
                                        expression2
                                          expression2
                                            expression3
                                              designator
                                          op2
                                          expression3
                                            literal
                                      op1
                                      expression2
                                        expression2
                                          expression3
                                            designator
                                        op2
                                        expression3
                                          literal
                                    op1
                                    expression2
                                      expression3
                                        literal
            statement
              forStatement
                assignmentStatement
                  designator
                  expression0
                    expression1
                      expression2
                        expression3
                          literal
                expression0
                  expression1
                    expression2
                      expression3
                        designator
                  op0
                  expression1
                    expression2
                      expression3
                        literal
                assignmentStatementNoSemi
                  designator
                  expression0
                    expression1
                      expression1
                        expression2
                          expression3
                            designator
                      op1
                      expression2
                        expression3
                          literal
                statementBlock
                  statementList
                    statement
                      forStatement
                        assignmentStatement
                          designator
                          expression0
                            expression1
                              expression2
                                expression3
                                  literal
                        expression0
                          expression1
                            expression2
                              expression3
                                designator
                          op0
                          expression1
                            expression2
                              expression3
                                literal
                        assignmentStatementNoSemi
                          designator
                          expression0
                            expression1
                              expression1
                                expression2
                                  expression3
                                    designator
                              op1
                              expression2
                                expression3
                                  literal
                        statementBlock
                          statementList
                            statement
                              callStatement
                                callExpression
                                  expressionList
                                    expression0
                                      expression1
                                        expression2
                                          expression3
                                            designator
                                              expression0
                                                expression1
                                                  expression2
                                                    expression3
                                                      designator
                    statement
                      callStatement
                        callExpression
                          expressionList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            designator
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            designator> but was: <line 10:18 no viable alternative at input 'canary_begin=0;'
line 13:15 mismatched input ';' expecting {'Add', 'Subtract', 'OR'}
line 13:23 mismatched input '>=' expecting {'Add', 'Subtract', 'OR', '['}
line 13:43 mismatched input '-' expecting {'Add', 'Subtract', 'OR', '['}
line 14:17 mismatched input ';' expecting {'Add', 'Subtract', 'OR'}
line 14:25 mismatched input '>=' expecting {'Add', 'Subtract', 'OR', '['}
line 14:45 mismatched input '-' expecting {'Add', 'Subtract', 'OR', '['}
line 15:14 no viable alternative at input 'x[outer]'
line 19:15 mismatched input ';' expecting {'Add', 'Subtract', 'OR'}
line 19:23 mismatched input '<' expecting {'Add', 'Subtract', 'OR', '['}
line 19:42 mismatched input '+' expecting {'Add', 'Subtract', 'OR', '['}
line 20:17 mismatched input ';' expecting {'Add', 'Subtract', 'OR'}
line 20:25 mismatched input '<' expecting {'Add', 'Subtract', 'OR', '['}
line 20:44 mismatched input '+' expecting {'Add', 'Subtract', 'OR', '['}
line 21:23 mismatched input ']' expecting {'Add', 'Subtract', 'OR', '['}
line 21:24 mismatched input ')' expecting {'Add', 'Subtract', 'OR', '['}
line 25:23 mismatched input ')' expecting {'Add', 'Subtract', 'OR', '['}
line 26:21 mismatched input ')' expecting {'Add', 'Subtract', 'OR', '['}>
	at crux.CompilerStageTests.lambda$parseTree$1(CompilerStageTests.java:88)
]]></failure>
  </testcase>
  <testcase name="parseTree" classname="crux.CompilerStageTests" time="0.005">
    <failure type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
Parse tree for program crux/stages/parse-tree/test47.crx differs from expected output. ==> expected: <program
  declarationList
    declaration
      variableDeclaration
        type
    declaration
      functionDefinition
        type
        parameterList
        statementBlock
          statementList
            statement
              assignmentStatement
                designator
                expression0
                  expression1
                    expression2
                      expression3
                        literal
            statement
              ifStatement
                expression0
                  expression1
                    expression2
                      expression3
                        expression0
                          expression1
                            expression2
                              expression3
                                literal
                statementBlock
                  statementList
                    statement
                      variableDeclaration
                        type
                    statement
                      assignmentStatement
                        designator
                        expression0
                          expression1
                            expression2
                              expression3
                                literal
                    statement
                      ifStatement
                        expression0
                          expression1
                            expression2
                              expression3
                                expression0
                                  expression1
                                    expression2
                                      expression3
                                        literal
                        statementBlock
                          statementList
                            statement
                              assignmentStatement
                                designator
                                expression0
                                  expression1
                                    expression2
                                      expression2
                                        expression3
                                          designator
                                      op2
                                      expression3
                                        literal
                            statement
                              variableDeclaration
                                type
                            statement
                              assignmentStatement
                                designator
                                expression0
                                  expression1
                                    expression2
                                      expression3
                                        literal
                            statement
                              ifStatement
                                expression0
                                  expression1
                                    expression2
                                      expression3
                                        expression0
                                          expression1
                                            expression2
                                              expression3
                                                literal
                                statementBlock
                                  statementList
                                    statement
                                      variableDeclaration
                                        type
                                    statement
                                      assignmentStatement
                                        designator
                                        expression0
                                          expression1
                                            expression2
                                              expression3
                                                literal
                                    statement
                                      callStatement
                                        callExpression
                                          expressionList
                                            expression0
                                              expression1
                                                expression2
                                                  expression3
                                                    designator
                                    statement
                                      callStatement
                                        callExpression
                                          expressionList
                            statement
                              callStatement
                                callExpression
                                  expressionList
                                    expression0
                                      expression1
                                        expression2
                                          expression3
                                            designator
                            statement
                              callStatement
                                callExpression
                                  expressionList
                    statement
                      callStatement
                        callExpression
                          expressionList
                            expression0
                              expression1
                                expression2
                                  expression3
                                    designator
                    statement
                      callStatement
                        callExpression
                          expressionList
            statement
              callStatement
                callExpression
                  expressionList
                    expression0
                      expression1
                        expression2
                          expression3
                            designator
            statement
              callStatement
                callExpression
                  expressionList> but was: <line 6:7 no viable alternative at input 'a=1;'
line 7:10 mismatched input ')' expecting {'Add', 'Subtract', 'OR'}
line 7:12 mismatched input '{' expecting {'Add', 'Subtract', 'OR'}
line 9:9 no viable alternative at input 'a=2;'
line 10:12 mismatched input ')' expecting {'Add', 'Subtract', 'OR'}
line 10:14 mismatched input '{' expecting {'Add', 'Subtract', 'OR'}
line 11:12 no viable alternative at input 'a=a*'
line 13:11 no viable alternative at input 'a=3;'
line 14:13 mismatched input ')' expecting {'Add', 'Subtract', 'OR'}
line 14:15 mismatched input '{' expecting {'Add', 'Subtract', 'OR'}
line 16:9 no viable alternative at input 'a=true;'
line 17:12 mismatched input ')' expecting {'Add', 'Subtract', 'OR', '['}
line 20:16 mismatched input ')' expecting {'Add', 'Subtract', 'OR', '['}
line 23:14 mismatched input ')' expecting {'Add', 'Subtract', 'OR', '['}
line 26:12 mismatched input ')' expecting {'Add', 'Subtract', 'OR', '['}>
	at crux.CompilerStageTests.lambda$parseTree$1(CompilerStageTests.java:88)
]]></failure>
  </testcase>
  <testcase name="parseTree" classname="crux.CompilerStageTests" time="0.004">
    <failure type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
Parse tree for program crux/stages/parse-tree/test48.crx differs from expected output. ==> expected: <program
  declarationList
    declaration
      functionDefinition
        type
        parameterList
        statementBlock
          statementList
            statement
              variableDeclaration
                type
            statement
              variableDeclaration
                type
            statement
              variableDeclaration
                type
            statement
              assignmentStatement
                designator
                expression0
                  expression1
                    expression2
                      expression3
                        literal
            statement
              assignmentStatement
                designator
                expression0
                  expression1
                    expression2
                      expression3
                        literal
            statement
              forStatement
                assignmentStatement
                  designator
                  expression0
                    expression1
                      expression2
                        expression3
                          literal
                expression0
                  expression1
                    expression2
                      expression3
                        designator
                  op0
                  expression1
                    expression2
                      expression3
                        literal
                assignmentStatementNoSemi
                  designator
                  expression0
                    expression1
                      expression1
                        expression2
                          expression3
                            designator
                      op1
                      expression2
                        expression3
                          literal
                statementBlock
                  statementList
                    statement
                      callStatement
                        callExpression
                          expressionList
                            expression0
                              expression1
                                expression2
                                  expression3
                                    designator
                    statement
                      callStatement
                        callExpression
                          expressionList
                    statement
                      variableDeclaration
                        type
                    statement
                      assignmentStatement
                        designator
                        expression0
                          expression1
                            expression1
                              expression2
                                expression3
                                  designator
                            op1
                            expression2
                              expression3
                                designator
                    statement
                      assignmentStatement
                        designator
                        expression0
                          expression1
                            expression2
                              expression3
                                designator
                    statement
                      assignmentStatement
                        designator
                        expression0
                          expression1
                            expression2
                              expression3
                                designator> but was: <line 7:7 no viable alternative at input 'a=0;'
line 9:11 mismatched input ';' expecting {'Add', 'Subtract', 'OR'}
line 9:15 mismatched input '<' expecting {'Add', 'Subtract', 'OR', '['}
line 9:27 mismatched input '+' expecting {'Add', 'Subtract', 'OR', '['}
line 10:14 mismatched input ')' expecting {'Add', 'Subtract', 'OR', '['}
line 13:10 no viable alternative at input 'c=a+'>
	at crux.CompilerStageTests.lambda$parseTree$1(CompilerStageTests.java:88)
]]></failure>
  </testcase>
  <testcase name="parseTree" classname="crux.CompilerStageTests" time="0.014">
    <failure type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
Parse tree for program crux/stages/parse-tree/test49.crx differs from expected output. ==> expected: <program
  declarationList
    declaration
      arrayDeclaration
        type
    declaration
      functionDefinition
        type
        parameterList
        statementBlock
          statementList
            statement
              variableDeclaration
                type
            statement
              forStatement
                assignmentStatement
                  designator
                  expression0
                    expression1
                      expression2
                        expression3
                          literal
                expression0
                  expression1
                    expression2
                      expression3
                        designator
                assignmentStatementNoSemi
                  designator
                  expression0
                    expression1
                      expression2
                        expression3
                          designator
                statementBlock
                  statementList
                    statement
                      variableDeclaration
                        type
                    statement
                      assignmentStatement
                        designator
                        expression0
                          expression1
                            expression2
                              expression3
                                literal
                    statement
                      forStatement
                        assignmentStatement
                          designator
                          expression0
                            expression1
                              expression2
                                expression3
                                  literal
                        expression0
                          expression1
                            expression2
                              expression3
                                designator
                          op0
                          expression1
                            expression2
                              expression3
                                literal
                        assignmentStatementNoSemi
                          designator
                          expression0
                            expression1
                              expression1
                                expression2
                                  expression3
                                    designator
                              op1
                              expression2
                                expression3
                                  literal
                        statementBlock
                          statementList
                            statement
                              ifStatement
                                expression0
                                  expression1
                                    expression2
                                      expression3
                                        expression0
                                          expression1
                                            expression2
                                              expression3
                                                designator
                                                  expression0
                                                    expression1
                                                      expression2
                                                        expression3
                                                          designator
                                          op0
                                          expression1
                                            expression2
                                              expression3
                                                designator
                                                  expression0
                                                    expression1
                                                      expression1
                                                        expression2
                                                          expression3
                                                            designator
                                                      op1
                                                      expression2
                                                        expression3
                                                          literal
                                statementBlock
                                  statementList
                                    statement
                                      variableDeclaration
                                        type
                                    statement
                                      assignmentStatement
                                        designator
                                        expression0
                                          expression1
                                            expression2
                                              expression3
                                                designator
                                                  expression0
                                                    expression1
                                                      expression2
                                                        expression3
                                                          designator
                                    statement
                                      assignmentStatement
                                        designator
                                          expression0
                                            expression1
                                              expression2
                                                expression3
                                                  designator
                                        expression0
                                          expression1
                                            expression2
                                              expression3
                                                designator
                                                  expression0
                                                    expression1
                                                      expression1
                                                        expression2
                                                          expression3
                                                            designator
                                                      op1
                                                      expression2
                                                        expression3
                                                          literal
                                    statement
                                      assignmentStatement
                                        designator
                                          expression0
                                            expression1
                                              expression1
                                                expression2
                                                  expression3
                                                    designator
                                              op1
                                              expression2
                                                expression3
                                                  literal
                                        expression0
                                          expression1
                                            expression2
                                              expression3
                                                designator
                                    statement
                                      assignmentStatement
                                        designator
                                        expression0
                                          expression1
                                            expression2
                                              expression3
                                                literal
    declaration
      functionDefinition
        type
        parameterList
        statementBlock
          statementList
            statement
              variableDeclaration
                type
            statement
              forStatement
                assignmentStatement
                  designator
                  expression0
                    expression1
                      expression2
                        expression3
                          literal
                expression0
                  expression1
                    expression2
                      expression3
                        designator
                  op0
                  expression1
                    expression2
                      expression3
                        literal
                assignmentStatementNoSemi
                  designator
                  expression0
                    expression1
                      expression1
                        expression2
                          expression3
                            designator
                      op1
                      expression2
                        expression3
                          literal
                statementBlock
                  statementList
                    statement
                      assignmentStatement
                        designator
                          expression0
                            expression1
                              expression2
                                expression3
                                  designator
                        expression0
                          expression1
                            expression1
                              expression2
                                expression3
                                  literal
                            op1
                            expression2
                              expression3
                                designator
            statement
              callStatement
                callExpression
                  expressionList
            statement
              forStatement
                assignmentStatement
                  designator
                  expression0
                    expression1
                      expression2
                        expression3
                          literal
                expression0
                  expression1
                    expression2
                      expression3
                        designator
                  op0
                  expression1
                    expression2
                      expression3
                        literal
                assignmentStatementNoSemi
                  designator
                  expression0
                    expression1
                      expression1
                        expression2
                          expression3
                            designator
                      op1
                      expression2
                        expression3
                          literal
                statementBlock
                  statementList
                    statement
                      callStatement
                        callExpression
                          expressionList
                            expression0
                              expression1
                                expression2
                                  expression3
                                    designator
                                      expression0
                                        expression1
                                          expression2
                                            expression3
                                              designator
                    statement
                      callStatement
                        callExpression
                          expressionList> but was: <line 6:20 mismatched input ';' expecting {'Add', 'Subtract', 'OR'}
line 6:29 mismatched input ';' expecting {'Add', 'Subtract', 'OR', '['}
line 6:48 mismatched input ')' expecting {'Add', 'Subtract', 'OR', '['}
line 8:19 no viable alternative at input 'swapped=false;'
line 9:13 mismatched input ';' expecting {'Add', 'Subtract', 'OR'}
line 9:15 mismatched input '<' expecting {'Add', 'Subtract', 'OR', '['}
line 9:26 mismatched input '+' expecting {'Add', 'Subtract', 'OR', '['}
line 10:13 mismatched input ']' expecting {'Add', 'Subtract', 'OR', '['}
line 10:15 mismatched input '>' expecting {'Add', 'Subtract', 'OR', '['}
line 10:20 mismatched input '+' expecting {'Add', 'Subtract', 'OR', '['}
line 10:25 mismatched input '{' expecting {'Add', 'Subtract', 'OR', '['}
line 12:10 no viable alternative at input 'tmp=a[i]'
line 23:11 mismatched input ';' expecting {'Add', 'Subtract', 'OR'}
line 23:15 mismatched input '<' expecting {'Add', 'Subtract', 'OR', '['}
line 23:27 mismatched input '+' expecting {'Add', 'Subtract', 'OR', '['}
line 24:7 no viable alternative at input 'a[i]'
line 29:11 mismatched input ';' expecting {'Add', 'Subtract', 'OR'}
line 29:15 mismatched input '<' expecting {'Add', 'Subtract', 'OR', '['}
line 29:27 mismatched input '+' expecting {'Add', 'Subtract', 'OR', '['}
line 30:16 mismatched input ']' expecting {'Add', 'Subtract', 'OR', '['}
line 30:17 mismatched input ')' expecting {'Add', 'Subtract', 'OR', '['}>
	at crux.CompilerStageTests.lambda$parseTree$1(CompilerStageTests.java:88)
]]></failure>
  </testcase>
  <testcase name="parseTree" classname="crux.CompilerStageTests" time="0.011">
    <failure type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
Parse tree for program crux/stages/parse-tree/test50.crx differs from expected output. ==> expected: <program
  declarationList
    declaration
      functionDefinition
        type
        parameterList
          parameter
            type
          parameter
            type
        statementBlock
          statementList
            statement
              variableDeclaration
                type
            statement
              assignmentStatement
                designator
                expression0
                  expression1
                    expression2
                      expression3
                        literal
            statement
              variableDeclaration
                type
            statement
              assignmentStatement
                designator
                expression0
                  expression1
                    expression2
                      expression3
                        literal
            statement
              forStatement
                assignmentStatement
                  designator
                  expression0
                    expression1
                      expression2
                        expression3
                          literal
                expression0
                  expression1
                    expression2
                      expression3
                        expression3
                          expression0
                            expression1
                              expression2
                                expression2
                                  expression3
                                    expression0
                                      expression1
                                        expression2
                                          expression3
                                            designator
                                      op0
                                      expression1
                                        expression2
                                          expression3
                                            literal
                                op2
                                expression3
                                  expression0
                                    expression1
                                      expression2
                                        expression3
                                          designator
                                    op0
                                    expression1
                                      expression2
                                        expression3
                                          literal
                assignmentStatementNoSemi
                  designator
                  expression0
                    expression1
                      expression1
                        expression2
                          expression3
                            designator
                      op1
                      expression2
                        expression3
                          literal
                statementBlock
                  statementList
                    statement
                      variableDeclaration
                        type
                    statement
                      variableDeclaration
                        type
                    statement
                      assignmentStatement
                        designator
                        expression0
                          expression1
                            expression1
                              expression2
                                expression3
                                  designator
                            op1
                            expression2
                              expression3
                                expression0
                                  expression1
                                    expression2
                                      expression2
                                        expression3
                                          expression0
                                            expression1
                                              expression2
                                                expression2
                                                  expression3
                                                    designator
                                                op2
                                                expression3
                                                  literal
                                      op2
                                      expression3
                                        literal
                    statement
                      assignmentStatement
                        designator
                        expression0
                          expression1
                            expression1
                              expression2
                                expression3
                                  designator
                            op1
                            expression2
                              expression3
                                expression0
                                  expression1
                                    expression2
                                      expression2
                                        expression3
                                          expression0
                                            expression1
                                              expression2
                                                expression2
                                                  expression3
                                                    designator
                                                op2
                                                expression3
                                                  literal
                                      op2
                                      expression3
                                        literal
                    statement
                      ifStatement
                        expression0
                          expression1
                            expression2
                              expression3
                                expression0
                                  expression1
                                    expression2
                                      expression2
                                        expression3
                                          expression0
                                            expression1
                                              expression2
                                                expression3
                                                  designator
                                            op0
                                            expression1
                                              expression2
                                                expression3
                                                  literal
                                      op2
                                      expression3
                                        expression0
                                          expression1
                                            expression2
                                              expression3
                                                designator
                                          op0
                                          expression1
                                            expression2
                                              expression3
                                                literal
                        statementBlock
                          statementList
                            statement
                              assignmentStatement
                                designator
                                expression0
                                  expression1
                                    expression1
                                      expression2
                                        expression2
                                          expression3
                                            designator
                                        op2
                                        expression3
                                          literal
                                    op1
                                    expression2
                                      expression3
                                        literal
                        statementBlock
                          statementList
                            statement
                              ifStatement
                                expression0
                                  expression1
                                    expression2
                                      expression3
                                        expression0
                                          expression1
                                            expression2
                                              expression2
                                                expression3
                                                  expression0
                                                    expression1
                                                      expression2
                                                        expression3
                                                          designator
                                                    op0
                                                    expression1
                                                      expression2
                                                        expression3
                                                          literal
                                              op2
                                              expression3
                                                expression0
                                                  expression1
                                                    expression2
                                                      expression3
                                                        designator
                                                  op0
                                                  expression1
                                                    expression2
                                                      expression3
                                                        literal
                                statementBlock
                                  statementList
                                    statement
                                      assignmentStatement
                                        designator
                                        expression0
                                          expression1
                                            expression1
                                              expression2
                                                expression2
                                                  expression3
                                                    designator
                                                op2
                                                expression3
                                                  literal
                                            op1
                                            expression2
                                              expression3
                                                literal
                                statementBlock
                                  statementList
                                    statement
                                      assignmentStatement
                                        designator
                                        expression0
                                          expression1
                                            expression2
                                              expression2
                                                expression3
                                                  designator
                                              op2
                                              expression3
                                                literal
                    statement
                      assignmentStatement
                        designator
                        expression0
                          expression1
                            expression2
                              expression2
                                expression3
                                  designator
                              op2
                              expression3
                                literal
                    statement
                      assignmentStatement
                        designator
                        expression0
                          expression1
                            expression2
                              expression2
                                expression3
                                  designator
                              op2
                              expression3
                                literal
            statement
              variableDeclaration
                type
            statement
              forStatement
                assignmentStatement
                  designator
                  expression0
                    expression1
                      expression2
                        expression3
                          literal
                expression0
                  expression1
                    expression2
                      expression3
                        designator
                  op0
                  expression1
                    expression2
                      expression3
                        literal
                assignmentStatementNoSemi
                  designator
                  expression0
                    expression1
                      expression1
                        expression2
                          expression3
                            designator
                      op1
                      expression2
                        expression3
                          literal
                statementBlock
                  statementList
                    statement
                      assignmentStatement
                        designator
                        expression0
                          expression1
                            expression1
                              expression2
                                expression3
                                  expression0
                                    expression1
                                      expression2
                                        expression2
                                          expression3
                                            designator
                                        op2
                                        expression3
                                          literal
                            op1
                            expression2
                              expression3
                                expression0
                                  expression1
                                    expression1
                                      expression2
                                        expression3
                                          designator
                                    op1
                                    expression2
                                      expression2
                                        expression3
                                          expression0
                                            expression1
                                              expression2
                                                expression2
                                                  expression3
                                                    designator
                                                op2
                                                expression3
                                                  literal
                                      op2
                                      expression3
                                        literal
                    statement
                      assignmentStatement
                        designator
                        expression0
                          expression1
                            expression2
                              expression2
                                expression3
                                  designator
                              op2
                              expression3
                                literal
            statement
              returnStatement
                expression0
                  expression1
                    expression2
                      expression3
                        designator
    declaration
      functionDefinition
        type
        parameterList
        statementBlock
          statementList
            statement
              variableDeclaration
                type
            statement
              forStatement
                assignmentStatement
                  designator
                  expression0
                    expression1
                      expression2
                        expression3
                          literal
                expression0
                  expression1
                    expression2
                      expression3
                        designator
                  op0
                  expression1
                    expression2
                      expression3
                        literal
                assignmentStatementNoSemi
                  designator
                  expression0
                    expression1
                      expression1
                        expression2
                          expression3
                            designator
                      op1
                      expression2
                        expression3
                          literal
                statementBlock
                  statementList
                    statement
                      variableDeclaration
                        type
                    statement
                      assignmentStatement
                        designator
                        expression0
                          expression1
                            expression2
                              expression3
                                callExpression
                                  expressionList
                    statement
                      callStatement
                        callExpression
                          expressionList
                            expression0
                              expression1
                                expression2
                                  expression3
                                    callExpression
                                      expressionList
                                        expression0
                                          expression1
                                            expression2
                                              expression3
                                                designator
                                        expression0
                                          expression1
                                            expression1
                                              expression2
                                                expression3
                                                  literal
                                            op1
                                            expression2
                                              expression3
                                                designator> but was: <line 5:10 no viable alternative at input 'tmp=0;'
line 7:12 no viable alternative at input 'count=0;'
line 8:15 mismatched input ';' expecting {'Add', 'Subtract', 'OR'}
line 8:23 mismatched input '==' expecting {'Add', 'Subtract', 'OR', '['}
line 8:29 mismatched input '&&' expecting {'Add', 'Subtract', 'OR', '['}
line 8:37 mismatched input '==' expecting {'Add', 'Subtract', 'OR', '['}
line 8:43 mismatched input ';' expecting {'Add', 'Subtract', 'OR', '['}
line 8:58 mismatched input '+' expecting {'Add', 'Subtract', 'OR', '['}
line 11:13 no viable alternative at input 'a=in-'
line 13:13 mismatched input '==' expecting {'Add', 'Subtract', 'OR', '['}
line 13:19 mismatched input '&&' expecting {'Add', 'Subtract', 'OR', '['}
line 13:25 mismatched input '==' expecting {'Add', 'Subtract', 'OR', '['}
line 13:32 mismatched input '{' expecting {'Add', 'Subtract', 'OR', '['}
line 14:19 no viable alternative at input 'tmp=tmp*'
line 16:15 mismatched input '==' expecting {'Add', 'Subtract', 'OR', '['}
line 16:21 mismatched input '&&' expecting {'Add', 'Subtract', 'OR', '['}
line 16:27 mismatched input '==' expecting {'Add', 'Subtract', 'OR', '['}
line 16:34 mismatched input '{' expecting {'Add', 'Subtract', 'OR', '['}
line 17:20 no viable alternative at input 'tmp=tmp*'
line 19:20 no viable alternative at input 'tmp=tmp*'
line 22:15 no viable alternative at input 'in=in/'
line 27:14 mismatched input ';' expecting {'Add', 'Subtract', 'OR'}
line 27:22 mismatched input '!=' expecting {'Add', 'Subtract', 'OR', '['}
line 27:42 mismatched input '-' expecting {'Add', 'Subtract', 'OR', '['}
line 28:16 no viable alternative at input 'out=(out*'
line 31:13 mismatched input ';' expecting {'Add', 'Subtract', 'OR', '['}
line 36:11 mismatched input ';' expecting {'Add', 'Subtract', 'OR'}
line 36:15 mismatched input '<' expecting {'Add', 'Subtract', 'OR', '['}
line 36:26 mismatched input '+' expecting {'Add', 'Subtract', 'OR', '['}
line 38:20 no viable alternative at input 'tmp=readChar();'
line 39:24 mismatched input ',' expecting {'Add', 'Subtract', 'OR', '['}
line 39:27 mismatched input '+' expecting {'Add', 'Subtract', 'OR'}
line 39:30 mismatched input ')' expecting {'LessThan', 'GreaterThan', 'LessThanEqual', 'GreaterThanEqual', 'NotEqual', 'Equal', ')', '[', ','}>
	at crux.CompilerStageTests.lambda$parseTree$1(CompilerStageTests.java:88)
]]></failure>
  </testcase>
</testsuite>